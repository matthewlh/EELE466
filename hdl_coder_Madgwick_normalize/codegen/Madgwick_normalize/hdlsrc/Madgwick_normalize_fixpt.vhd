-- -------------------------------------------------------------
-- 

-- File Name: C:\Users\w92p177\Documents\GitHub\EELE466\hdl_coder_Madgwick_normalize\codegen\Madgwick_normalize\hdlsrc\Madgwick_normalize_fixpt.vhd
-- Created: 2015-04-21 15:11:27
-- 
-- Generated by MATLAB 8.3, MATLAB Coder 2.6 and HDL Coder 3.4
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ceout         1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ax                            ceout         1
-- ay                            ceout         1
-- az                            ceout         1
-- aw                            ceout         1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Madgwick_normalize_fixpt
-- Source Path: Madgwick_normalize_fixpt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Madgwick_normalize_fixpt IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clkenable                         :   IN    std_logic;
        ax1                               :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        ay1                               :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        az1                               :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        aw1                               :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        rsrresult                         :   IN    std_logic_vector(23 DOWNTO 0);  -- ufix24
        ceout                             :   OUT   std_logic;
        ax                                :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        ay                                :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        az                                :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        aw                                :   OUT   std_logic_vector(23 DOWNTO 0)  -- sfix24_En12
        );
END Madgwick_normalize_fixpt;


ARCHITECTURE rtl OF Madgwick_normalize_fixpt IS

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL ax1_signed                       : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL ax_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL ay1_signed                       : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL ay_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL az1_signed                       : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL az_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL aw1_signed                       : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL aw_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL rsrresult_unsigned               : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL rsr_result                       : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL ax_tmp                           : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL ay_tmp                           : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL az_tmp                           : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL aw_tmp                           : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL Madgwick_normalize_fixpt_cast    : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL Madgwick_normalize_fixpt_mul_temp : signed(48 DOWNTO 0);  -- sfix49_En12
  SIGNAL Madgwick_normalize_fixpt_cast_1  : signed(47 DOWNTO 0);  -- sfix48_En12
  SIGNAL Madgwick_normalize_fixpt_cast_2  : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL Madgwick_normalize_fixpt_mul_temp_1 : signed(48 DOWNTO 0);  -- sfix49_En12
  SIGNAL Madgwick_normalize_fixpt_cast_3  : signed(47 DOWNTO 0);  -- sfix48_En12
  SIGNAL Madgwick_normalize_fixpt_cast_4  : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL Madgwick_normalize_fixpt_mul_temp_2 : signed(48 DOWNTO 0);  -- sfix49_En12
  SIGNAL Madgwick_normalize_fixpt_cast_5  : signed(47 DOWNTO 0);  -- sfix48_En12
  SIGNAL Madgwick_normalize_fixpt_cast_6  : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL Madgwick_normalize_fixpt_mul_temp_3 : signed(48 DOWNTO 0);  -- sfix49_En12
  SIGNAL Madgwick_normalize_fixpt_cast_7  : signed(47 DOWNTO 0);  -- sfix48_En12

BEGIN
  ax1_signed <= signed(ax1);

  enb <= clkenable;

  in_0_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      ax_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        ax_1 <= ax1_signed;
      END IF;
    END IF;
  END PROCESS in_0_pipe_process;


  ay1_signed <= signed(ay1);

  in_1_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      ay_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        ay_1 <= ay1_signed;
      END IF;
    END IF;
  END PROCESS in_1_pipe_process;


  az1_signed <= signed(az1);

  in_2_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      az_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        az_1 <= az1_signed;
      END IF;
    END IF;
  END PROCESS in_2_pipe_process;


  aw1_signed <= signed(aw1);

  in_3_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      aw_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        aw_1 <= aw1_signed;
      END IF;
    END IF;
  END PROCESS in_3_pipe_process;


  rsrresult_unsigned <= unsigned(rsrresult);

  in_4_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      rsr_result <= to_unsigned(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        rsr_result <= rsrresult_unsigned;
      END IF;
    END IF;
  END PROCESS in_4_pipe_process;


  --HDL code generation from MATLAB function: Madgwick_normalize_fixpt
  --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  --                                                                          %
  --       Generated by MATLAB 8.3, MATLAB Coder 2.6 and HDL Coder 3.4        %
  --                                                                          %
  --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  
--'Madgwick_normalize_fixpt:9' fm = fimath('RoundingMethod', 'Floor', 'OverflowAction', 'Wrap', 'ProductMode', 'FullPrecision', 'MaxProductWordLength', 128, 'SumMode', 'FullPrecision', 'MaxSumWordLength', 128);
  --'Madgwick_normalize_fixpt:11' aw = fi(aw_1, 1, 24, 12, fm);
  --'Madgwick_normalize_fixpt:12' ax = fi(ax_1, 1, 24, 12, fm);
  --'Madgwick_normalize_fixpt:13' ay = fi(ay_1, 1, 24, 12, fm);
  --'Madgwick_normalize_fixpt:14' az = fi(az_1, 1, 24, 12, fm);
  --dotproduct = ax * ax + ay * ay + az * az + aw * aw;
  --if dotproduct ~= 0
  --    root = sqrt(dotproduct);
  --    recipNorm = 1 / root;
  --'Madgwick_normalize_fixpt:20' ax = fi(ax*rsr_result, 1, 24, 12, fm);
  --'Madgwick_normalize_fixpt:21' ay = fi(ay*rsr_result, 1, 24, 12, fm);
  --'Madgwick_normalize_fixpt:22' az = fi(az*rsr_result, 1, 24, 12, fm);
  --'Madgwick_normalize_fixpt:23' aw = fi(aw*rsr_result, 1, 24, 12, fm);
  Madgwick_normalize_fixpt_cast <= signed(resize(rsr_result, 25));
  Madgwick_normalize_fixpt_mul_temp <= aw_1 * Madgwick_normalize_fixpt_cast;
  Madgwick_normalize_fixpt_cast_1 <= Madgwick_normalize_fixpt_mul_temp(47 DOWNTO 0);
  aw_tmp <= Madgwick_normalize_fixpt_cast_1(23 DOWNTO 0);
  Madgwick_normalize_fixpt_cast_2 <= signed(resize(rsr_result, 25));
  Madgwick_normalize_fixpt_mul_temp_1 <= ax_1 * Madgwick_normalize_fixpt_cast_2;
  Madgwick_normalize_fixpt_cast_3 <= Madgwick_normalize_fixpt_mul_temp_1(47 DOWNTO 0);
  ax_tmp <= Madgwick_normalize_fixpt_cast_3(23 DOWNTO 0);
  Madgwick_normalize_fixpt_cast_4 <= signed(resize(rsr_result, 25));
  Madgwick_normalize_fixpt_mul_temp_2 <= ay_1 * Madgwick_normalize_fixpt_cast_4;
  Madgwick_normalize_fixpt_cast_5 <= Madgwick_normalize_fixpt_mul_temp_2(47 DOWNTO 0);
  ay_tmp <= Madgwick_normalize_fixpt_cast_5(23 DOWNTO 0);
  Madgwick_normalize_fixpt_cast_6 <= signed(resize(rsr_result, 25));
  Madgwick_normalize_fixpt_mul_temp_3 <= az_1 * Madgwick_normalize_fixpt_cast_6;
  Madgwick_normalize_fixpt_cast_7 <= Madgwick_normalize_fixpt_mul_temp_3(47 DOWNTO 0);
  az_tmp <= Madgwick_normalize_fixpt_cast_7(23 DOWNTO 0);

  ax <= std_logic_vector(ax_tmp);

  ay <= std_logic_vector(ay_tmp);

  az <= std_logic_vector(az_tmp);

  aw <= std_logic_vector(aw_tmp);

  ceout <= clkenable;

END rtl;

