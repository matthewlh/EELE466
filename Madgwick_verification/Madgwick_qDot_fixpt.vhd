-- -------------------------------------------------------------
-- 

-- File Name: C:\Users\z68j959\Documents\GitHub\EELE466\hdl_coder_Madgwick_qDot\codegen\Madgwick_qDot\hdlsrc\Madgwick_qDot_fixpt.vhd
-- Created: 2015-04-28 13:18:26
-- 
-- Generated by MATLAB 8.3, MATLAB Coder 2.6 and HDL Coder 3.4
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ceout         1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- qdot1                         ceout         1
-- qdot2                         ceout         1
-- qdot3                         ceout         1
-- qdot4                         ceout         1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Madgwick_qDot_fixpt
-- Source Path: Madgwick_qDot_fixpt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Madgwick_qDot_fixpt IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clkenable                         :   IN    std_logic;
        q0                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        q1                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        q2                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        q3                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        gx                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        gy                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        gz                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        ceout                             :   OUT   std_logic;
        qdot1                             :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        qdot2                             :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        qdot3                             :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        qdot4                             :   OUT   std_logic_vector(23 DOWNTO 0)  -- sfix24_En12
        );
END Madgwick_qDot_fixpt;


ARCHITECTURE rtl OF Madgwick_qDot_fixpt IS

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL q0_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q0_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q1_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q1_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q2_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q2_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q3_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q3_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL gx_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL gx_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL gy_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL gy_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL gz_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL gz_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL qDot1_1                          : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL qDot2_1                          : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL qDot3_1                          : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL qDot4_1                          : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL Madgwick_qDot_fixpt_cast         : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL Madgwick_qDot_fixpt_cast_1       : signed(25 DOWNTO 0);  -- sfix26_En12
  SIGNAL Madgwick_qDot_fixpt_cast_2       : signed(25 DOWNTO 0);  -- sfix26_En12
  SIGNAL Madgwick_qDot_fixpt_cast_3       : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL Madgwick_qDot_fixpt_mul_temp     : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_qDot_fixpt_sub_cast     : signed(49 DOWNTO 0);  -- sfix50_En24
  SIGNAL Madgwick_qDot_fixpt_mul_temp_1   : signed(47 DOWNTO 0);  -- sfix48_En24
  SIGNAL Madgwick_qDot_fixpt_sub_cast_1   : signed(49 DOWNTO 0);  -- sfix50_En24
  SIGNAL Madgwick_qDot_fixpt_sub_temp     : signed(49 DOWNTO 0);  -- sfix50_En24
  SIGNAL Madgwick_qDot_fixpt_sub_cast_2   : signed(50 DOWNTO 0);  -- sfix51_En24
  SIGNAL Madgwick_qDot_fixpt_mul_temp_2   : signed(47 DOWNTO 0);  -- sfix48_En24
  SIGNAL Madgwick_qDot_fixpt_sub_cast_3   : signed(50 DOWNTO 0);  -- sfix51_En24
  SIGNAL Madgwick_qDot_fixpt_sub_temp_1   : signed(50 DOWNTO 0);  -- sfix51_En24
  SIGNAL Madgwick_qDot_fixpt_mul_temp_3   : signed(75 DOWNTO 0);  -- sfix76_En48
  SIGNAL Madgwick_qDot_fixpt_cast_4       : signed(74 DOWNTO 0);  -- sfix75_En48
  SIGNAL Madgwick_qDot_fixpt_mul_temp_4   : signed(47 DOWNTO 0);  -- sfix48_En24
  SIGNAL Madgwick_qDot_fixpt_add_cast     : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_qDot_fixpt_mul_temp_5   : signed(47 DOWNTO 0);  -- sfix48_En24
  SIGNAL Madgwick_qDot_fixpt_add_cast_1   : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_qDot_fixpt_add_temp     : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_qDot_fixpt_sub_cast_4   : signed(49 DOWNTO 0);  -- sfix50_En24
  SIGNAL Madgwick_qDot_fixpt_mul_temp_6   : signed(47 DOWNTO 0);  -- sfix48_En24
  SIGNAL Madgwick_qDot_fixpt_sub_cast_5   : signed(49 DOWNTO 0);  -- sfix50_En24
  SIGNAL Madgwick_qDot_fixpt_sub_temp_2   : signed(49 DOWNTO 0);  -- sfix50_En24
  SIGNAL Madgwick_qDot_fixpt_mul_temp_7   : signed(74 DOWNTO 0);  -- sfix75_En48
  SIGNAL Madgwick_qDot_fixpt_cast_5       : signed(73 DOWNTO 0);  -- sfix74_En48
  SIGNAL Madgwick_qDot_fixpt_mul_temp_8   : signed(47 DOWNTO 0);  -- sfix48_En24
  SIGNAL Madgwick_qDot_fixpt_sub_cast_6   : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_qDot_fixpt_mul_temp_9   : signed(47 DOWNTO 0);  -- sfix48_En24
  SIGNAL Madgwick_qDot_fixpt_sub_cast_7   : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_qDot_fixpt_sub_temp_3   : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_qDot_fixpt_add_cast_2   : signed(49 DOWNTO 0);  -- sfix50_En24
  SIGNAL Madgwick_qDot_fixpt_mul_temp_10  : signed(47 DOWNTO 0);  -- sfix48_En24
  SIGNAL Madgwick_qDot_fixpt_add_cast_3   : signed(49 DOWNTO 0);  -- sfix50_En24
  SIGNAL Madgwick_qDot_fixpt_add_temp_1   : signed(49 DOWNTO 0);  -- sfix50_En24
  SIGNAL Madgwick_qDot_fixpt_mul_temp_11  : signed(74 DOWNTO 0);  -- sfix75_En48
  SIGNAL Madgwick_qDot_fixpt_cast_6       : signed(73 DOWNTO 0);  -- sfix74_En48
  SIGNAL Madgwick_qDot_fixpt_mul_temp_12  : signed(47 DOWNTO 0);  -- sfix48_En24
  SIGNAL Madgwick_qDot_fixpt_add_cast_4   : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_qDot_fixpt_mul_temp_13  : signed(47 DOWNTO 0);  -- sfix48_En24
  SIGNAL Madgwick_qDot_fixpt_add_cast_5   : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_qDot_fixpt_add_temp_2   : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_qDot_fixpt_sub_cast_8   : signed(49 DOWNTO 0);  -- sfix50_En24
  SIGNAL Madgwick_qDot_fixpt_mul_temp_14  : signed(47 DOWNTO 0);  -- sfix48_En24
  SIGNAL Madgwick_qDot_fixpt_sub_cast_9   : signed(49 DOWNTO 0);  -- sfix50_En24
  SIGNAL Madgwick_qDot_fixpt_sub_temp_4   : signed(49 DOWNTO 0);  -- sfix50_En24
  SIGNAL Madgwick_qDot_fixpt_mul_temp_15  : signed(74 DOWNTO 0);  -- sfix75_En48
  SIGNAL Madgwick_qDot_fixpt_cast_7       : signed(73 DOWNTO 0);  -- sfix74_En48

BEGIN
  q0_signed <= signed(q0);

  enb <= clkenable;

  in_0_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      q0_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        q0_1 <= q0_signed;
      END IF;
    END IF;
  END PROCESS in_0_pipe_process;


  q1_signed <= signed(q1);

  in_1_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      q1_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        q1_1 <= q1_signed;
      END IF;
    END IF;
  END PROCESS in_1_pipe_process;


  q2_signed <= signed(q2);

  in_2_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      q2_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        q2_1 <= q2_signed;
      END IF;
    END IF;
  END PROCESS in_2_pipe_process;


  q3_signed <= signed(q3);

  in_3_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      q3_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        q3_1 <= q3_signed;
      END IF;
    END IF;
  END PROCESS in_3_pipe_process;


  gx_signed <= signed(gx);

  in_4_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      gx_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        gx_1 <= gx_signed;
      END IF;
    END IF;
  END PROCESS in_4_pipe_process;


  gy_signed <= signed(gy);

  in_5_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      gy_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        gy_1 <= gy_signed;
      END IF;
    END IF;
  END PROCESS in_5_pipe_process;


  gz_signed <= signed(gz);

  in_6_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      gz_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        gz_1 <= gz_signed;
      END IF;
    END IF;
  END PROCESS in_6_pipe_process;


  --HDL code generation from MATLAB function: Madgwick_qDot_fixpt
  --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  --                                                                          %
  --       Generated by MATLAB 8.3, MATLAB Coder 2.6 and HDL Coder 3.4        %
  --                                                                          %
  --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  
--'Madgwick_qDot_fixpt:9' fm = fimath('RoundingMethod', 'Floor', 'OverflowAction', 'Wrap', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision');
  -- Rate of change of quaternion from gyroscope
  
--'Madgwick_qDot_fixpt:11' qDot1 = fi(fi(0.5, 0, 24, 24, fm)*(fi_signed(fi_signed(fi_uminus(q1)*gx) - q2*gy) - q3*gz), 1, 24, 12, fm);
  --'Madgwick_qDot_fixpt:31' coder.inline( 'always' );
  --'Madgwick_qDot_fixpt:32' if isfi( a )
  --'Madgwick_qDot_fixpt:33' nt = numerictype( a );
  --'Madgwick_qDot_fixpt:34' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  --'Madgwick_qDot_fixpt:35' y = -fi( a, new_nt, fimath( a ) );
  --'Madgwick_qDot_fixpt:19' coder.inline( 'always' );
  --'Madgwick_qDot_fixpt:20' if isfi( a ) && ~(issigned( a ))
  --'Madgwick_qDot_fixpt:24' else
  --'Madgwick_qDot_fixpt:25' y = a;
  --'Madgwick_qDot_fixpt:19' coder.inline( 'always' );
  --'Madgwick_qDot_fixpt:20' if isfi( a ) && ~(issigned( a ))
  --'Madgwick_qDot_fixpt:24' else
  --'Madgwick_qDot_fixpt:25' y = a;
  
--'Madgwick_qDot_fixpt:12' qDot2 = fi(fi(0.5, 0, 24, 24, fm)*(fi_signed(q0*gx + q2*gz) - q3*gy), 1, 24, 12, fm);
  --'Madgwick_qDot_fixpt:19' coder.inline( 'always' );
  --'Madgwick_qDot_fixpt:20' if isfi( a ) && ~(issigned( a ))
  --'Madgwick_qDot_fixpt:24' else
  --'Madgwick_qDot_fixpt:25' y = a;
  
--'Madgwick_qDot_fixpt:13' qDot3 = fi(fi(0.5, 0, 24, 24, fm)*(fi_signed(q0*gy) - q1*gz + q3*gx), 1, 24, 12, fm);
  --'Madgwick_qDot_fixpt:19' coder.inline( 'always' );
  --'Madgwick_qDot_fixpt:20' if isfi( a ) && ~(issigned( a ))
  --'Madgwick_qDot_fixpt:24' else
  --'Madgwick_qDot_fixpt:25' y = a;
  
--'Madgwick_qDot_fixpt:14' qDot4 = fi(fi(0.5, 0, 24, 24, fm)*(fi_signed(q0*gz + q1*gy) - q2*gx), 1, 24, 12, fm);
  --'Madgwick_qDot_fixpt:19' coder.inline( 'always' );
  --'Madgwick_qDot_fixpt:20' if isfi( a ) && ~(issigned( a ))
  --'Madgwick_qDot_fixpt:24' else
  --'Madgwick_qDot_fixpt:25' y = a;
  Madgwick_qDot_fixpt_cast <= resize(q1_1, 25);
  Madgwick_qDot_fixpt_cast_1 <= resize(Madgwick_qDot_fixpt_cast, 26);
  Madgwick_qDot_fixpt_cast_2 <=  - (Madgwick_qDot_fixpt_cast_1);
  Madgwick_qDot_fixpt_cast_3 <= Madgwick_qDot_fixpt_cast_2(24 DOWNTO 0);
  Madgwick_qDot_fixpt_mul_temp <= Madgwick_qDot_fixpt_cast_3 * gx_1;
  Madgwick_qDot_fixpt_sub_cast <= resize(Madgwick_qDot_fixpt_mul_temp, 50);
  Madgwick_qDot_fixpt_mul_temp_1 <= q2_1 * gy_1;
  Madgwick_qDot_fixpt_sub_cast_1 <= resize(Madgwick_qDot_fixpt_mul_temp_1, 50);
  Madgwick_qDot_fixpt_sub_temp <= Madgwick_qDot_fixpt_sub_cast - Madgwick_qDot_fixpt_sub_cast_1;
  Madgwick_qDot_fixpt_sub_cast_2 <= resize(Madgwick_qDot_fixpt_sub_temp, 51);
  Madgwick_qDot_fixpt_mul_temp_2 <= q3_1 * gz_1;
  Madgwick_qDot_fixpt_sub_cast_3 <= resize(Madgwick_qDot_fixpt_mul_temp_2, 51);
  Madgwick_qDot_fixpt_sub_temp_1 <= Madgwick_qDot_fixpt_sub_cast_2 - Madgwick_qDot_fixpt_sub_cast_3;
  -- CSD Encoding (8388608) : 100000000000000000000000; Cost (Adders) = 0
  Madgwick_qDot_fixpt_mul_temp_3 <= resize(Madgwick_qDot_fixpt_sub_temp_1 & '0' & '0' & '0' & '0' & '0' & '0' 
    & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 
    76);
  Madgwick_qDot_fixpt_cast_4 <= Madgwick_qDot_fixpt_mul_temp_3(74 DOWNTO 0);
  qDot1_1 <= Madgwick_qDot_fixpt_cast_4(59 DOWNTO 36);
  Madgwick_qDot_fixpt_mul_temp_4 <= q0_1 * gx_1;
  Madgwick_qDot_fixpt_add_cast <= resize(Madgwick_qDot_fixpt_mul_temp_4, 49);
  Madgwick_qDot_fixpt_mul_temp_5 <= q2_1 * gz_1;
  Madgwick_qDot_fixpt_add_cast_1 <= resize(Madgwick_qDot_fixpt_mul_temp_5, 49);
  Madgwick_qDot_fixpt_add_temp <= Madgwick_qDot_fixpt_add_cast + Madgwick_qDot_fixpt_add_cast_1;
  Madgwick_qDot_fixpt_sub_cast_4 <= resize(Madgwick_qDot_fixpt_add_temp, 50);
  Madgwick_qDot_fixpt_mul_temp_6 <= q3_1 * gy_1;
  Madgwick_qDot_fixpt_sub_cast_5 <= resize(Madgwick_qDot_fixpt_mul_temp_6, 50);
  Madgwick_qDot_fixpt_sub_temp_2 <= Madgwick_qDot_fixpt_sub_cast_4 - Madgwick_qDot_fixpt_sub_cast_5;
  -- CSD Encoding (8388608) : 100000000000000000000000; Cost (Adders) = 0
  Madgwick_qDot_fixpt_mul_temp_7 <= resize(Madgwick_qDot_fixpt_sub_temp_2 & '0' & '0' & '0' & '0' & '0' & '0' 
    & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 
    75);
  Madgwick_qDot_fixpt_cast_5 <= Madgwick_qDot_fixpt_mul_temp_7(73 DOWNTO 0);
  qDot2_1 <= Madgwick_qDot_fixpt_cast_5(59 DOWNTO 36);
  Madgwick_qDot_fixpt_mul_temp_8 <= q0_1 * gy_1;
  Madgwick_qDot_fixpt_sub_cast_6 <= resize(Madgwick_qDot_fixpt_mul_temp_8, 49);
  Madgwick_qDot_fixpt_mul_temp_9 <= q1_1 * gz_1;
  Madgwick_qDot_fixpt_sub_cast_7 <= resize(Madgwick_qDot_fixpt_mul_temp_9, 49);
  Madgwick_qDot_fixpt_sub_temp_3 <= Madgwick_qDot_fixpt_sub_cast_6 - Madgwick_qDot_fixpt_sub_cast_7;
  Madgwick_qDot_fixpt_add_cast_2 <= resize(Madgwick_qDot_fixpt_sub_temp_3, 50);
  Madgwick_qDot_fixpt_mul_temp_10 <= q3_1 * gx_1;
  Madgwick_qDot_fixpt_add_cast_3 <= resize(Madgwick_qDot_fixpt_mul_temp_10, 50);
  Madgwick_qDot_fixpt_add_temp_1 <= Madgwick_qDot_fixpt_add_cast_2 + Madgwick_qDot_fixpt_add_cast_3;
  -- CSD Encoding (8388608) : 100000000000000000000000; Cost (Adders) = 0
  Madgwick_qDot_fixpt_mul_temp_11 <= resize(Madgwick_qDot_fixpt_add_temp_1 & '0' & '0' & '0' & '0' & '0' & 
    '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 75);
  Madgwick_qDot_fixpt_cast_6 <= Madgwick_qDot_fixpt_mul_temp_11(73 DOWNTO 0);
  qDot3_1 <= Madgwick_qDot_fixpt_cast_6(59 DOWNTO 36);
  Madgwick_qDot_fixpt_mul_temp_12 <= q0_1 * gz_1;
  Madgwick_qDot_fixpt_add_cast_4 <= resize(Madgwick_qDot_fixpt_mul_temp_12, 49);
  Madgwick_qDot_fixpt_mul_temp_13 <= q1_1 * gy_1;
  Madgwick_qDot_fixpt_add_cast_5 <= resize(Madgwick_qDot_fixpt_mul_temp_13, 49);
  Madgwick_qDot_fixpt_add_temp_2 <= Madgwick_qDot_fixpt_add_cast_4 + Madgwick_qDot_fixpt_add_cast_5;
  Madgwick_qDot_fixpt_sub_cast_8 <= resize(Madgwick_qDot_fixpt_add_temp_2, 50);
  Madgwick_qDot_fixpt_mul_temp_14 <= q2_1 * gx_1;
  Madgwick_qDot_fixpt_sub_cast_9 <= resize(Madgwick_qDot_fixpt_mul_temp_14, 50);
  Madgwick_qDot_fixpt_sub_temp_4 <= Madgwick_qDot_fixpt_sub_cast_8 - Madgwick_qDot_fixpt_sub_cast_9;
  -- CSD Encoding (8388608) : 100000000000000000000000; Cost (Adders) = 0
  Madgwick_qDot_fixpt_mul_temp_15 <= resize(Madgwick_qDot_fixpt_sub_temp_4 & '0' & '0' & '0' & '0' & '0' & 
    '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 75);
  Madgwick_qDot_fixpt_cast_7 <= Madgwick_qDot_fixpt_mul_temp_15(73 DOWNTO 0);
  qDot4_1 <= Madgwick_qDot_fixpt_cast_7(59 DOWNTO 36);

  qdot1 <= std_logic_vector(qDot1_1);

  qdot2 <= std_logic_vector(qDot2_1);

  qdot3 <= std_logic_vector(qDot3_1);

  qdot4 <= std_logic_vector(qDot4_1);

  ceout <= clkenable;

END rtl;

