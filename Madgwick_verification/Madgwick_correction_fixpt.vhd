-- -------------------------------------------------------------
-- 

-- File Name: C:\Users\z68j959\Documents\GitHub\EELE466\hdl_coder_Madgwick_correction\codegen\Madgwick_correction\hdlsrc\Madgwick_correction_fixpt.vhd
-- Created: 2015-04-28 13:15:28
-- 
-- Generated by MATLAB 8.3, MATLAB Coder 2.6 and HDL Coder 3.4
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ceout         1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- s0                            ceout         1
-- s1                            ceout         1
-- s2                            ceout         1
-- s3                            ceout         1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Madgwick_correction_fixpt
-- Source Path: Madgwick_correction_fixpt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.Madgwick_correction_fixpt_pac.ALL;

ENTITY Madgwick_correction_fixpt IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clkenable                         :   IN    std_logic;
        q0                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        q1                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        q2                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        q3                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        ax                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        ay                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        az                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        mx                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        my                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        mz                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        ceout                             :   OUT   std_logic;
        s0                                :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        s1                                :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        s2                                :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        s3                                :   OUT   std_logic_vector(23 DOWNTO 0)  -- sfix24_En12
        );
END Madgwick_correction_fixpt;


ARCHITECTURE rtl OF Madgwick_correction_fixpt IS

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL q0_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q0_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q1_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q1_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q2_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q2_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q3_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q3_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL ax_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL ax_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL ay_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL ay_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL az_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL az_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL mx_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL mx_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL my_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL my_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL mz_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL mz_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL s0_tmp                           : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL s1_tmp                           : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL s2_tmp                           : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL s3_tmp                           : signed(23 DOWNTO 0);  -- sfix24_En12

BEGIN
  q0_signed <= signed(q0);

  enb <= clkenable;

  in_0_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      q0_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        q0_1 <= q0_signed;
      END IF;
    END IF;
  END PROCESS in_0_pipe_process;


  q1_signed <= signed(q1);

  in_1_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      q1_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        q1_1 <= q1_signed;
      END IF;
    END IF;
  END PROCESS in_1_pipe_process;


  q2_signed <= signed(q2);

  in_2_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      q2_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        q2_1 <= q2_signed;
      END IF;
    END IF;
  END PROCESS in_2_pipe_process;


  q3_signed <= signed(q3);

  in_3_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      q3_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        q3_1 <= q3_signed;
      END IF;
    END IF;
  END PROCESS in_3_pipe_process;


  ax_signed <= signed(ax);

  in_4_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      ax_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        ax_1 <= ax_signed;
      END IF;
    END IF;
  END PROCESS in_4_pipe_process;


  ay_signed <= signed(ay);

  in_5_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      ay_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        ay_1 <= ay_signed;
      END IF;
    END IF;
  END PROCESS in_5_pipe_process;


  az_signed <= signed(az);

  in_6_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      az_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        az_1 <= az_signed;
      END IF;
    END IF;
  END PROCESS in_6_pipe_process;


  mx_signed <= signed(mx);

  in_7_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mx_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mx_1 <= mx_signed;
      END IF;
    END IF;
  END PROCESS in_7_pipe_process;


  my_signed <= signed(my);

  in_8_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      my_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        my_1 <= my_signed;
      END IF;
    END IF;
  END PROCESS in_8_pipe_process;


  mz_signed <= signed(mz);

  in_9_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mz_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mz_1 <= mz_signed;
      END IF;
    END IF;
  END PROCESS in_9_pipe_process;


  Madgwick_correction_fixpt_1_output : PROCESS (q0_1, q1_1, q2_1, q3_1, ax_1, ay_1, az_1, mx_1, my_1, mz_1)
    VARIABLE v2q0mx : unsigned(23 DOWNTO 0);
    VARIABLE v2q0my : unsigned(23 DOWNTO 0);
    VARIABLE v2q0mz : unsigned(23 DOWNTO 0);
    VARIABLE v2q1mx : unsigned(23 DOWNTO 0);
    VARIABLE v2q0 : unsigned(23 DOWNTO 0);
    VARIABLE v2q1 : unsigned(23 DOWNTO 0);
    VARIABLE v2q2 : unsigned(23 DOWNTO 0);
    VARIABLE v2q3 : unsigned(23 DOWNTO 0);
    VARIABLE v2q0q2 : unsigned(23 DOWNTO 0);
    VARIABLE v2q2q3 : unsigned(23 DOWNTO 0);
    VARIABLE q0q0 : unsigned(23 DOWNTO 0);
    VARIABLE q0q1 : unsigned(23 DOWNTO 0);
    VARIABLE q0q2 : unsigned(23 DOWNTO 0);
    VARIABLE q0q3 : unsigned(23 DOWNTO 0);
    VARIABLE q1q1 : unsigned(23 DOWNTO 0);
    VARIABLE q1q2 : unsigned(23 DOWNTO 0);
    VARIABLE q1q3 : unsigned(23 DOWNTO 0);
    VARIABLE q2q2 : unsigned(23 DOWNTO 0);
    VARIABLE q2q3 : unsigned(23 DOWNTO 0);
    VARIABLE q3q3 : unsigned(23 DOWNTO 0);
    VARIABLE hx : signed(23 DOWNTO 0);
    VARIABLE hy : signed(23 DOWNTO 0);
    VARIABLE cc : signed(48 DOWNTO 0);
    VARIABLE v2bx : unsigned(23 DOWNTO 0);
    VARIABLE v2bz : signed(23 DOWNTO 0);
    VARIABLE v4bx : unsigned(23 DOWNTO 0);
    VARIABLE v4bz : signed(23 DOWNTO 0);
    VARIABLE ytemp : signed(24 DOWNTO 0);
    VARIABLE yy : signed(24 DOWNTO 0);
    VARIABLE cast : signed(26 DOWNTO 0);
    VARIABLE cast_0 : signed(25 DOWNTO 0);
    VARIABLE mul_temp : signed(49 DOWNTO 0);
    VARIABLE cast_1 : signed(26 DOWNTO 0);
    VARIABLE cast_2 : signed(25 DOWNTO 0);
    VARIABLE mul_temp_0 : signed(49 DOWNTO 0);
    VARIABLE cast_3 : signed(26 DOWNTO 0);
    VARIABLE cast_4 : signed(25 DOWNTO 0);
    VARIABLE mul_temp_1 : signed(49 DOWNTO 0);
    VARIABLE cast_5 : signed(26 DOWNTO 0);
    VARIABLE cast_6 : signed(25 DOWNTO 0);
    VARIABLE mul_temp_2 : signed(49 DOWNTO 0);
    VARIABLE cast_7 : signed(26 DOWNTO 0);
    VARIABLE cast_8 : signed(25 DOWNTO 0);
    VARIABLE cast_9 : signed(26 DOWNTO 0);
    VARIABLE cast_10 : signed(25 DOWNTO 0);
    VARIABLE cast_11 : signed(26 DOWNTO 0);
    VARIABLE cast_12 : signed(25 DOWNTO 0);
    VARIABLE cast_13 : signed(26 DOWNTO 0);
    VARIABLE cast_14 : signed(25 DOWNTO 0);
    VARIABLE cast_15 : signed(26 DOWNTO 0);
    VARIABLE cast_16 : signed(25 DOWNTO 0);
    VARIABLE mul_temp_3 : signed(49 DOWNTO 0);
    VARIABLE cast_17 : signed(26 DOWNTO 0);
    VARIABLE cast_18 : signed(25 DOWNTO 0);
    VARIABLE mul_temp_4 : signed(49 DOWNTO 0);
    VARIABLE mul_temp_5 : signed(47 DOWNTO 0);
    VARIABLE mul_temp_6 : signed(47 DOWNTO 0);
    VARIABLE mul_temp_7 : signed(47 DOWNTO 0);
    VARIABLE mul_temp_8 : signed(47 DOWNTO 0);
    VARIABLE mul_temp_9 : signed(47 DOWNTO 0);
    VARIABLE mul_temp_10 : signed(47 DOWNTO 0);
    VARIABLE mul_temp_11 : signed(47 DOWNTO 0);
    VARIABLE mul_temp_12 : signed(47 DOWNTO 0);
    VARIABLE mul_temp_13 : signed(47 DOWNTO 0);
    VARIABLE mul_temp_14 : signed(47 DOWNTO 0);
    VARIABLE cast_19 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_15 : signed(48 DOWNTO 0);
    VARIABLE sub_cast : signed(47 DOWNTO 0);
    VARIABLE sub_cast_0 : signed(49 DOWNTO 0);
    VARIABLE cast_20 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_16 : signed(48 DOWNTO 0);
    VARIABLE sub_cast_1 : signed(47 DOWNTO 0);
    VARIABLE sub_cast_2 : signed(49 DOWNTO 0);
    VARIABLE sub_temp : signed(49 DOWNTO 0);
    VARIABLE add_cast : signed(50 DOWNTO 0);
    VARIABLE cast_21 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_17 : signed(48 DOWNTO 0);
    VARIABLE add_cast_0 : signed(47 DOWNTO 0);
    VARIABLE add_cast_1 : signed(50 DOWNTO 0);
    VARIABLE add_temp : signed(50 DOWNTO 0);
    VARIABLE add_cast_2 : signed(51 DOWNTO 0);
    VARIABLE cast_22 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_18 : signed(48 DOWNTO 0);
    VARIABLE add_cast_3 : signed(47 DOWNTO 0);
    VARIABLE add_cast_4 : signed(51 DOWNTO 0);
    VARIABLE add_temp_0 : signed(51 DOWNTO 0);
    VARIABLE add_cast_5 : signed(72 DOWNTO 0);
    VARIABLE cast_23 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_19 : signed(48 DOWNTO 0);
    VARIABLE cast_24 : signed(47 DOWNTO 0);
    VARIABLE mul_temp_20 : signed(71 DOWNTO 0);
    VARIABLE add_cast_6 : signed(72 DOWNTO 0);
    VARIABLE add_temp_1 : signed(72 DOWNTO 0);
    VARIABLE add_cast_7 : signed(73 DOWNTO 0);
    VARIABLE cast_25 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_21 : signed(48 DOWNTO 0);
    VARIABLE cast_26 : signed(47 DOWNTO 0);
    VARIABLE mul_temp_22 : signed(71 DOWNTO 0);
    VARIABLE add_cast_8 : signed(73 DOWNTO 0);
    VARIABLE add_temp_2 : signed(73 DOWNTO 0);
    VARIABLE sub_cast_3 : signed(74 DOWNTO 0);
    VARIABLE cast_27 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_23 : signed(48 DOWNTO 0);
    VARIABLE sub_cast_4 : signed(47 DOWNTO 0);
    VARIABLE sub_cast_5 : signed(74 DOWNTO 0);
    VARIABLE sub_temp_0 : signed(74 DOWNTO 0);
    VARIABLE sub_cast_6 : signed(75 DOWNTO 0);
    VARIABLE cast_28 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_24 : signed(48 DOWNTO 0);
    VARIABLE sub_cast_7 : signed(47 DOWNTO 0);
    VARIABLE sub_cast_8 : signed(75 DOWNTO 0);
    VARIABLE sub_temp_1 : signed(75 DOWNTO 0);
    VARIABLE cast_29 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_25 : signed(48 DOWNTO 0);
    VARIABLE add_cast_9 : signed(47 DOWNTO 0);
    VARIABLE add_cast_10 : signed(49 DOWNTO 0);
    VARIABLE cast_30 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_26 : signed(48 DOWNTO 0);
    VARIABLE add_cast_11 : signed(47 DOWNTO 0);
    VARIABLE add_cast_12 : signed(49 DOWNTO 0);
    VARIABLE add_temp_3 : signed(49 DOWNTO 0);
    VARIABLE sub_cast_9 : signed(50 DOWNTO 0);
    VARIABLE cast_31 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_27 : signed(48 DOWNTO 0);
    VARIABLE sub_cast_10 : signed(47 DOWNTO 0);
    VARIABLE sub_cast_11 : signed(50 DOWNTO 0);
    VARIABLE sub_temp_2 : signed(50 DOWNTO 0);
    VARIABLE add_cast_13 : signed(51 DOWNTO 0);
    VARIABLE cast_32 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_28 : signed(48 DOWNTO 0);
    VARIABLE add_cast_14 : signed(47 DOWNTO 0);
    VARIABLE add_cast_15 : signed(51 DOWNTO 0);
    VARIABLE add_temp_4 : signed(51 DOWNTO 0);
    VARIABLE sub_cast_12 : signed(52 DOWNTO 0);
    VARIABLE cast_33 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_29 : signed(48 DOWNTO 0);
    VARIABLE sub_cast_13 : signed(47 DOWNTO 0);
    VARIABLE sub_cast_14 : signed(52 DOWNTO 0);
    VARIABLE sub_temp_3 : signed(52 DOWNTO 0);
    VARIABLE add_cast_16 : signed(53 DOWNTO 0);
    VARIABLE cast_34 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_30 : signed(48 DOWNTO 0);
    VARIABLE add_cast_17 : signed(47 DOWNTO 0);
    VARIABLE add_cast_18 : signed(53 DOWNTO 0);
    VARIABLE add_temp_5 : signed(53 DOWNTO 0);
    VARIABLE add_cast_19 : signed(72 DOWNTO 0);
    VARIABLE cast_35 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_31 : signed(48 DOWNTO 0);
    VARIABLE cast_36 : signed(47 DOWNTO 0);
    VARIABLE mul_temp_32 : signed(71 DOWNTO 0);
    VARIABLE add_cast_20 : signed(72 DOWNTO 0);
    VARIABLE add_temp_6 : signed(72 DOWNTO 0);
    VARIABLE sub_cast_15 : signed(73 DOWNTO 0);
    VARIABLE cast_37 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_33 : signed(48 DOWNTO 0);
    VARIABLE sub_cast_16 : signed(47 DOWNTO 0);
    VARIABLE sub_cast_17 : signed(73 DOWNTO 0);
    VARIABLE sub_temp_4 : signed(73 DOWNTO 0);
    VARIABLE mul_temp_34 : signed(47 DOWNTO 0);
    VARIABLE add_cast_21 : signed(48 DOWNTO 0);
    VARIABLE mul_temp_35 : signed(47 DOWNTO 0);
    VARIABLE add_cast_22 : signed(48 DOWNTO 0);
    VARIABLE cast_38 : vector_of_unsigned8(0 TO 23);
    VARIABLE sll_temp : vector_of_signed25(0 TO 23);
    VARIABLE mul_temp_36 : vector_of_signed50(0 TO 23);
    VARIABLE cast_39 : vector_of_signed50(0 TO 23);
    VARIABLE cast_40 : signed(24 DOWNTO 0);
    VARIABLE cast_41 : signed(25 DOWNTO 0);
    VARIABLE cast_42 : signed(25 DOWNTO 0);
    VARIABLE cast_43 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_37 : signed(48 DOWNTO 0);
    VARIABLE add_cast_23 : signed(49 DOWNTO 0);
    VARIABLE cast_44 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_38 : signed(48 DOWNTO 0);
    VARIABLE add_cast_24 : signed(47 DOWNTO 0);
    VARIABLE add_cast_25 : signed(49 DOWNTO 0);
    VARIABLE add_temp_7 : signed(49 DOWNTO 0);
    VARIABLE add_cast_26 : signed(51 DOWNTO 0);
    VARIABLE cast_45 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_39 : signed(48 DOWNTO 0);
    VARIABLE add_cast_27 : signed(47 DOWNTO 0);
    VARIABLE add_cast_28 : signed(51 DOWNTO 0);
    VARIABLE add_temp_8 : signed(51 DOWNTO 0);
    VARIABLE add_cast_29 : signed(52 DOWNTO 0);
    VARIABLE cast_46 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_40 : signed(48 DOWNTO 0);
    VARIABLE add_cast_30 : signed(47 DOWNTO 0);
    VARIABLE add_cast_31 : signed(52 DOWNTO 0);
    VARIABLE add_temp_9 : signed(52 DOWNTO 0);
    VARIABLE sub_cast_18 : signed(53 DOWNTO 0);
    VARIABLE cast_47 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_41 : signed(48 DOWNTO 0);
    VARIABLE sub_cast_19 : signed(47 DOWNTO 0);
    VARIABLE sub_cast_20 : signed(53 DOWNTO 0);
    VARIABLE sub_temp_5 : signed(53 DOWNTO 0);
    VARIABLE add_cast_32 : signed(72 DOWNTO 0);
    VARIABLE cast_48 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_42 : signed(48 DOWNTO 0);
    VARIABLE cast_49 : signed(47 DOWNTO 0);
    VARIABLE mul_temp_43 : signed(71 DOWNTO 0);
    VARIABLE add_cast_33 : signed(72 DOWNTO 0);
    VARIABLE add_temp_10 : signed(72 DOWNTO 0);
    VARIABLE sub_cast_21 : signed(73 DOWNTO 0);
    VARIABLE cast_50 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_44 : signed(48 DOWNTO 0);
    VARIABLE sub_cast_22 : signed(47 DOWNTO 0);
    VARIABLE sub_cast_23 : signed(73 DOWNTO 0);
    VARIABLE sub_temp_6 : signed(73 DOWNTO 0);
    VARIABLE add_cast_34 : signed(74 DOWNTO 0);
    VARIABLE cast_51 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_45 : signed(48 DOWNTO 0);
    VARIABLE add_cast_35 : signed(47 DOWNTO 0);
    VARIABLE add_cast_36 : signed(74 DOWNTO 0);
    VARIABLE add_temp_11 : signed(74 DOWNTO 0);
    VARIABLE cast_52 : unsigned(25 DOWNTO 0);
    VARIABLE cast_53 : signed(26 DOWNTO 0);
    VARIABLE cast_54 : signed(25 DOWNTO 0);
    VARIABLE cast_55 : signed(24 DOWNTO 0);
    VARIABLE cast_56 : signed(25 DOWNTO 0);
    VARIABLE cast_57 : signed(25 DOWNTO 0);
    VARIABLE cast_58 : signed(24 DOWNTO 0);
    VARIABLE sub_cast_24 : unsigned(25 DOWNTO 0);
    VARIABLE sub_cast_25 : signed(27 DOWNTO 0);
    VARIABLE sub_cast_26 : signed(27 DOWNTO 0);
    VARIABLE sub_temp_7 : signed(27 DOWNTO 0);
    VARIABLE sub_cast_27 : signed(36 DOWNTO 0);
    VARIABLE sub_cast_28 : signed(36 DOWNTO 0);
    VARIABLE sub_temp_8 : signed(36 DOWNTO 0);
    VARIABLE mul_temp_46 : signed(61 DOWNTO 0);
    VARIABLE add_cast_37 : signed(62 DOWNTO 0);
    VARIABLE cast_59 : signed(24 DOWNTO 0);
    VARIABLE add_cast_38 : unsigned(25 DOWNTO 0);
    VARIABLE add_cast_39 : unsigned(26 DOWNTO 0);
    VARIABLE add_cast_40 : unsigned(26 DOWNTO 0);
    VARIABLE add_temp_12 : unsigned(26 DOWNTO 0);
    VARIABLE sub_cast_29 : signed(36 DOWNTO 0);
    VARIABLE sub_cast_30 : signed(36 DOWNTO 0);
    VARIABLE sub_temp_9 : signed(36 DOWNTO 0);
    VARIABLE mul_temp_47 : signed(61 DOWNTO 0);
    VARIABLE add_cast_41 : signed(60 DOWNTO 0);
    VARIABLE add_cast_42 : signed(62 DOWNTO 0);
    VARIABLE add_temp_13 : signed(62 DOWNTO 0);
    VARIABLE sub_cast_31 : signed(106 DOWNTO 0);
    VARIABLE mul_temp_48 : signed(47 DOWNTO 0);
    VARIABLE cast_60 : signed(24 DOWNTO 0);
    VARIABLE sub_cast_32 : signed(25 DOWNTO 0);
    VARIABLE sub_temp_10 : signed(25 DOWNTO 0);
    VARIABLE sub_cast_33 : signed(26 DOWNTO 0);
    VARIABLE sub_cast_34 : signed(26 DOWNTO 0);
    VARIABLE sub_temp_11 : signed(26 DOWNTO 0);
    VARIABLE mul_temp_49 : signed(51 DOWNTO 0);
    VARIABLE add_cast_43 : signed(50 DOWNTO 0);
    VARIABLE add_cast_44 : signed(51 DOWNTO 0);
    VARIABLE sub_cast_35 : signed(25 DOWNTO 0);
    VARIABLE sub_cast_36 : signed(25 DOWNTO 0);
    VARIABLE sub_temp_12 : signed(25 DOWNTO 0);
    VARIABLE mul_temp_50 : signed(49 DOWNTO 0);
    VARIABLE add_cast_45 : signed(51 DOWNTO 0);
    VARIABLE add_temp_14 : signed(51 DOWNTO 0);
    VARIABLE sub_cast_37 : signed(57 DOWNTO 0);
    VARIABLE sub_cast_38 : signed(57 DOWNTO 0);
    VARIABLE sub_temp_13 : signed(57 DOWNTO 0);
    VARIABLE mul_temp_51 : signed(105 DOWNTO 0);
    VARIABLE sub_cast_39 : signed(106 DOWNTO 0);
    VARIABLE sub_temp_14 : signed(106 DOWNTO 0);
    VARIABLE add_cast_46 : signed(108 DOWNTO 0);
    VARIABLE cast_61 : signed(24 DOWNTO 0);
    VARIABLE cast_62 : signed(25 DOWNTO 0);
    VARIABLE cast_63 : signed(25 DOWNTO 0);
    VARIABLE cast_64 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_52 : signed(48 DOWNTO 0);
    VARIABLE add_cast_47 : signed(49 DOWNTO 0);
    VARIABLE mul_temp_53 : signed(47 DOWNTO 0);
    VARIABLE add_cast_48 : signed(49 DOWNTO 0);
    VARIABLE add_temp_15 : signed(49 DOWNTO 0);
    VARIABLE cast_65 : signed(24 DOWNTO 0);
    VARIABLE sub_cast_40 : signed(25 DOWNTO 0);
    VARIABLE sub_cast_41 : signed(25 DOWNTO 0);
    VARIABLE sub_temp_15 : signed(25 DOWNTO 0);
    VARIABLE mul_temp_54 : signed(50 DOWNTO 0);
    VARIABLE add_cast_49 : signed(49 DOWNTO 0);
    VARIABLE add_cast_50 : signed(50 DOWNTO 0);
    VARIABLE add_cast_51 : unsigned(24 DOWNTO 0);
    VARIABLE add_cast_52 : unsigned(24 DOWNTO 0);
    VARIABLE add_temp_16 : unsigned(24 DOWNTO 0);
    VARIABLE cast_66 : signed(25 DOWNTO 0);
    VARIABLE mul_temp_55 : signed(49 DOWNTO 0);
    VARIABLE add_cast_53 : signed(48 DOWNTO 0);
    VARIABLE add_cast_54 : signed(50 DOWNTO 0);
    VARIABLE add_temp_17 : signed(50 DOWNTO 0);
    VARIABLE sub_cast_42 : signed(57 DOWNTO 0);
    VARIABLE sub_cast_43 : signed(57 DOWNTO 0);
    VARIABLE sub_temp_16 : signed(57 DOWNTO 0);
    VARIABLE mul_temp_56 : signed(107 DOWNTO 0);
    VARIABLE add_cast_55 : signed(108 DOWNTO 0);
    VARIABLE add_temp_18 : signed(108 DOWNTO 0);
    VARIABLE add_cast_56 : signed(109 DOWNTO 0);
    VARIABLE cast_67 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_57 : signed(48 DOWNTO 0);
    VARIABLE cast_68 : signed(47 DOWNTO 0);
    VARIABLE add_cast_57 : unsigned(24 DOWNTO 0);
    VARIABLE add_cast_58 : unsigned(24 DOWNTO 0);
    VARIABLE add_temp_19 : unsigned(24 DOWNTO 0);
    VARIABLE mul_temp_58 : unsigned(48 DOWNTO 0);
    VARIABLE add_cast_59 : signed(51 DOWNTO 0);
    VARIABLE sub_cast_44 : signed(25 DOWNTO 0);
    VARIABLE sub_temp_17 : signed(25 DOWNTO 0);
    VARIABLE sub_cast_45 : signed(26 DOWNTO 0);
    VARIABLE sub_cast_46 : signed(26 DOWNTO 0);
    VARIABLE sub_temp_18 : signed(26 DOWNTO 0);
    VARIABLE mul_temp_59 : signed(50 DOWNTO 0);
    VARIABLE add_cast_60 : signed(51 DOWNTO 0);
    VARIABLE add_temp_20 : signed(51 DOWNTO 0);
    VARIABLE sub_cast_47 : signed(57 DOWNTO 0);
    VARIABLE sub_cast_48 : signed(57 DOWNTO 0);
    VARIABLE sub_temp_19 : signed(57 DOWNTO 0);
    VARIABLE mul_temp_60 : signed(105 DOWNTO 0);
    VARIABLE add_cast_61 : signed(109 DOWNTO 0);
    VARIABLE add_temp_21 : signed(109 DOWNTO 0);
    VARIABLE cast_69 : signed(24 DOWNTO 0);
    VARIABLE sub_cast_49 : unsigned(25 DOWNTO 0);
    VARIABLE sub_cast_50 : signed(27 DOWNTO 0);
    VARIABLE sub_cast_51 : signed(27 DOWNTO 0);
    VARIABLE sub_temp_20 : signed(27 DOWNTO 0);
    VARIABLE sub_cast_52 : signed(36 DOWNTO 0);
    VARIABLE sub_cast_53 : signed(36 DOWNTO 0);
    VARIABLE sub_temp_21 : signed(36 DOWNTO 0);
    VARIABLE mul_temp_61 : signed(61 DOWNTO 0);
    VARIABLE add_cast_62 : signed(60 DOWNTO 0);
    VARIABLE add_cast_63 : signed(61 DOWNTO 0);
    VARIABLE cast_70 : signed(24 DOWNTO 0);
    VARIABLE add_cast_64 : unsigned(25 DOWNTO 0);
    VARIABLE add_cast_65 : unsigned(26 DOWNTO 0);
    VARIABLE add_cast_66 : unsigned(26 DOWNTO 0);
    VARIABLE add_temp_22 : unsigned(26 DOWNTO 0);
    VARIABLE sub_cast_54 : signed(36 DOWNTO 0);
    VARIABLE sub_cast_55 : signed(36 DOWNTO 0);
    VARIABLE sub_temp_22 : signed(36 DOWNTO 0);
    VARIABLE mul_temp_62 : signed(61 DOWNTO 0);
    VARIABLE add_cast_67 : signed(60 DOWNTO 0);
    VARIABLE add_cast_68 : signed(61 DOWNTO 0);
    VARIABLE add_temp_23 : signed(61 DOWNTO 0);
    VARIABLE sub_cast_56 : signed(75 DOWNTO 0);
    VARIABLE cast_71 : signed(27 DOWNTO 0);
    VARIABLE cast_72 : signed(26 DOWNTO 0);
    VARIABLE sub_cast_57 : unsigned(25 DOWNTO 0);
    VARIABLE sub_cast_58 : signed(26 DOWNTO 0);
    VARIABLE sub_temp_23 : signed(26 DOWNTO 0);
    VARIABLE sub_cast_59 : signed(27 DOWNTO 0);
    VARIABLE sub_cast_60 : unsigned(25 DOWNTO 0);
    VARIABLE sub_cast_61 : signed(27 DOWNTO 0);
    VARIABLE sub_temp_24 : signed(27 DOWNTO 0);
    VARIABLE sub_cast_62 : signed(36 DOWNTO 0);
    VARIABLE sub_cast_63 : signed(36 DOWNTO 0);
    VARIABLE sub_temp_25 : signed(36 DOWNTO 0);
    VARIABLE mul_temp_63 : signed(63 DOWNTO 0);
    VARIABLE sub_cast_64 : signed(75 DOWNTO 0);
    VARIABLE sub_temp_26 : signed(75 DOWNTO 0);
    VARIABLE add_cast_69 : signed(107 DOWNTO 0);
    VARIABLE mul_temp_64 : signed(47 DOWNTO 0);
    VARIABLE cast_73 : signed(24 DOWNTO 0);
    VARIABLE sub_cast_65 : signed(25 DOWNTO 0);
    VARIABLE sub_temp_27 : signed(25 DOWNTO 0);
    VARIABLE sub_cast_66 : signed(26 DOWNTO 0);
    VARIABLE sub_cast_67 : signed(26 DOWNTO 0);
    VARIABLE sub_temp_28 : signed(26 DOWNTO 0);
    VARIABLE mul_temp_65 : signed(51 DOWNTO 0);
    VARIABLE add_cast_70 : signed(50 DOWNTO 0);
    VARIABLE add_cast_71 : signed(51 DOWNTO 0);
    VARIABLE sub_cast_68 : signed(25 DOWNTO 0);
    VARIABLE sub_cast_69 : signed(25 DOWNTO 0);
    VARIABLE sub_temp_29 : signed(25 DOWNTO 0);
    VARIABLE mul_temp_66 : signed(49 DOWNTO 0);
    VARIABLE add_cast_72 : signed(51 DOWNTO 0);
    VARIABLE add_temp_24 : signed(51 DOWNTO 0);
    VARIABLE sub_cast_70 : signed(57 DOWNTO 0);
    VARIABLE sub_cast_71 : signed(57 DOWNTO 0);
    VARIABLE sub_temp_30 : signed(57 DOWNTO 0);
    VARIABLE mul_temp_67 : signed(105 DOWNTO 0);
    VARIABLE add_cast_73 : signed(107 DOWNTO 0);
    VARIABLE add_temp_25 : signed(107 DOWNTO 0);
    VARIABLE add_cast_74 : signed(108 DOWNTO 0);
    VARIABLE cast_74 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_68 : signed(48 DOWNTO 0);
    VARIABLE add_cast_75 : signed(47 DOWNTO 0);
    VARIABLE add_cast_76 : signed(48 DOWNTO 0);
    VARIABLE mul_temp_69 : signed(47 DOWNTO 0);
    VARIABLE add_cast_77 : signed(48 DOWNTO 0);
    VARIABLE add_temp_26 : signed(48 DOWNTO 0);
    VARIABLE cast_75 : signed(24 DOWNTO 0);
    VARIABLE sub_cast_72 : signed(25 DOWNTO 0);
    VARIABLE sub_cast_73 : signed(25 DOWNTO 0);
    VARIABLE sub_temp_31 : signed(25 DOWNTO 0);
    VARIABLE mul_temp_70 : signed(50 DOWNTO 0);
    VARIABLE add_cast_78 : signed(49 DOWNTO 0);
    VARIABLE add_cast_79 : signed(50 DOWNTO 0);
    VARIABLE add_cast_80 : unsigned(24 DOWNTO 0);
    VARIABLE add_cast_81 : unsigned(24 DOWNTO 0);
    VARIABLE add_temp_27 : unsigned(24 DOWNTO 0);
    VARIABLE cast_76 : signed(25 DOWNTO 0);
    VARIABLE mul_temp_71 : signed(49 DOWNTO 0);
    VARIABLE add_cast_82 : signed(48 DOWNTO 0);
    VARIABLE add_cast_83 : signed(50 DOWNTO 0);
    VARIABLE add_temp_28 : signed(50 DOWNTO 0);
    VARIABLE sub_cast_74 : signed(57 DOWNTO 0);
    VARIABLE sub_cast_75 : signed(57 DOWNTO 0);
    VARIABLE sub_temp_32 : signed(57 DOWNTO 0);
    VARIABLE mul_temp_72 : signed(106 DOWNTO 0);
    VARIABLE add_cast_84 : signed(108 DOWNTO 0);
    VARIABLE add_temp_29 : signed(108 DOWNTO 0);
    VARIABLE add_cast_85 : signed(109 DOWNTO 0);
    VARIABLE cast_77 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_73 : signed(48 DOWNTO 0);
    VARIABLE sub_cast_76 : signed(47 DOWNTO 0);
    VARIABLE sub_cast_77 : signed(49 DOWNTO 0);
    VARIABLE mul_temp_74 : signed(47 DOWNTO 0);
    VARIABLE sub_cast_78 : signed(49 DOWNTO 0);
    VARIABLE sub_temp_33 : signed(49 DOWNTO 0);
    VARIABLE add_cast_86 : unsigned(24 DOWNTO 0);
    VARIABLE add_cast_87 : unsigned(24 DOWNTO 0);
    VARIABLE add_temp_30 : unsigned(24 DOWNTO 0);
    VARIABLE mul_temp_75 : unsigned(48 DOWNTO 0);
    VARIABLE add_cast_88 : signed(51 DOWNTO 0);
    VARIABLE sub_cast_79 : signed(25 DOWNTO 0);
    VARIABLE sub_temp_34 : signed(25 DOWNTO 0);
    VARIABLE sub_cast_80 : signed(26 DOWNTO 0);
    VARIABLE sub_cast_81 : signed(26 DOWNTO 0);
    VARIABLE sub_temp_35 : signed(26 DOWNTO 0);
    VARIABLE mul_temp_76 : signed(50 DOWNTO 0);
    VARIABLE add_cast_89 : signed(51 DOWNTO 0);
    VARIABLE add_temp_31 : signed(51 DOWNTO 0);
    VARIABLE sub_cast_82 : signed(57 DOWNTO 0);
    VARIABLE sub_cast_83 : signed(57 DOWNTO 0);
    VARIABLE sub_temp_36 : signed(57 DOWNTO 0);
    VARIABLE mul_temp_77 : signed(107 DOWNTO 0);
    VARIABLE add_cast_90 : signed(109 DOWNTO 0);
    VARIABLE add_temp_32 : signed(109 DOWNTO 0);
    VARIABLE cast_78 : signed(24 DOWNTO 0);
    VARIABLE cast_79 : signed(25 DOWNTO 0);
    VARIABLE cast_80 : signed(25 DOWNTO 0);
    VARIABLE cast_81 : signed(24 DOWNTO 0);
    VARIABLE sub_cast_84 : unsigned(25 DOWNTO 0);
    VARIABLE sub_cast_85 : signed(27 DOWNTO 0);
    VARIABLE sub_cast_86 : signed(27 DOWNTO 0);
    VARIABLE sub_temp_37 : signed(27 DOWNTO 0);
    VARIABLE sub_cast_87 : signed(36 DOWNTO 0);
    VARIABLE sub_cast_88 : signed(36 DOWNTO 0);
    VARIABLE sub_temp_38 : signed(36 DOWNTO 0);
    VARIABLE mul_temp_78 : signed(61 DOWNTO 0);
    VARIABLE add_cast_91 : signed(62 DOWNTO 0);
    VARIABLE cast_82 : signed(24 DOWNTO 0);
    VARIABLE add_cast_92 : unsigned(25 DOWNTO 0);
    VARIABLE add_cast_93 : unsigned(26 DOWNTO 0);
    VARIABLE add_cast_94 : unsigned(26 DOWNTO 0);
    VARIABLE add_temp_33 : unsigned(26 DOWNTO 0);
    VARIABLE sub_cast_89 : signed(36 DOWNTO 0);
    VARIABLE sub_cast_90 : signed(36 DOWNTO 0);
    VARIABLE sub_temp_39 : signed(36 DOWNTO 0);
    VARIABLE mul_temp_79 : signed(61 DOWNTO 0);
    VARIABLE add_cast_95 : signed(60 DOWNTO 0);
    VARIABLE add_cast_96 : signed(62 DOWNTO 0);
    VARIABLE add_temp_34 : signed(62 DOWNTO 0);
    VARIABLE sub_cast_91 : signed(75 DOWNTO 0);
    VARIABLE cast_83 : signed(27 DOWNTO 0);
    VARIABLE cast_84 : signed(26 DOWNTO 0);
    VARIABLE sub_cast_92 : unsigned(25 DOWNTO 0);
    VARIABLE sub_cast_93 : signed(26 DOWNTO 0);
    VARIABLE sub_temp_40 : signed(26 DOWNTO 0);
    VARIABLE sub_cast_94 : signed(27 DOWNTO 0);
    VARIABLE sub_cast_95 : unsigned(25 DOWNTO 0);
    VARIABLE sub_cast_96 : signed(27 DOWNTO 0);
    VARIABLE sub_temp_41 : signed(27 DOWNTO 0);
    VARIABLE sub_cast_97 : signed(36 DOWNTO 0);
    VARIABLE sub_cast_98 : signed(36 DOWNTO 0);
    VARIABLE sub_temp_42 : signed(36 DOWNTO 0);
    VARIABLE mul_temp_80 : signed(63 DOWNTO 0);
    VARIABLE sub_cast_99 : signed(75 DOWNTO 0);
    VARIABLE sub_temp_43 : signed(75 DOWNTO 0);
    VARIABLE add_cast_97 : signed(109 DOWNTO 0);
    VARIABLE cast_85 : signed(24 DOWNTO 0);
    VARIABLE cast_86 : signed(25 DOWNTO 0);
    VARIABLE cast_87 : signed(25 DOWNTO 0);
    VARIABLE cast_88 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_81 : signed(48 DOWNTO 0);
    VARIABLE sub_cast_100 : signed(50 DOWNTO 0);
    VARIABLE mul_temp_82 : signed(47 DOWNTO 0);
    VARIABLE sub_cast_101 : signed(50 DOWNTO 0);
    VARIABLE sub_temp_44 : signed(50 DOWNTO 0);
    VARIABLE cast_89 : signed(24 DOWNTO 0);
    VARIABLE sub_cast_102 : signed(25 DOWNTO 0);
    VARIABLE sub_temp_45 : signed(25 DOWNTO 0);
    VARIABLE sub_cast_103 : signed(26 DOWNTO 0);
    VARIABLE sub_cast_104 : signed(26 DOWNTO 0);
    VARIABLE sub_temp_46 : signed(26 DOWNTO 0);
    VARIABLE mul_temp_83 : signed(51 DOWNTO 0);
    VARIABLE add_cast_98 : signed(50 DOWNTO 0);
    VARIABLE add_cast_99 : signed(51 DOWNTO 0);
    VARIABLE sub_cast_105 : signed(25 DOWNTO 0);
    VARIABLE sub_cast_106 : signed(25 DOWNTO 0);
    VARIABLE sub_temp_47 : signed(25 DOWNTO 0);
    VARIABLE mul_temp_84 : signed(49 DOWNTO 0);
    VARIABLE add_cast_100 : signed(51 DOWNTO 0);
    VARIABLE add_temp_35 : signed(51 DOWNTO 0);
    VARIABLE sub_cast_107 : signed(57 DOWNTO 0);
    VARIABLE sub_cast_108 : signed(57 DOWNTO 0);
    VARIABLE sub_temp_48 : signed(57 DOWNTO 0);
    VARIABLE mul_temp_85 : signed(108 DOWNTO 0);
    VARIABLE add_cast_101 : signed(109 DOWNTO 0);
    VARIABLE add_temp_36 : signed(109 DOWNTO 0);
    VARIABLE add_cast_102 : signed(110 DOWNTO 0);
    VARIABLE cast_90 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_86 : signed(48 DOWNTO 0);
    VARIABLE add_cast_103 : signed(47 DOWNTO 0);
    VARIABLE add_cast_104 : signed(48 DOWNTO 0);
    VARIABLE mul_temp_87 : signed(47 DOWNTO 0);
    VARIABLE add_cast_105 : signed(48 DOWNTO 0);
    VARIABLE add_temp_37 : signed(48 DOWNTO 0);
    VARIABLE cast_91 : signed(24 DOWNTO 0);
    VARIABLE sub_cast_109 : signed(25 DOWNTO 0);
    VARIABLE sub_cast_110 : signed(25 DOWNTO 0);
    VARIABLE sub_temp_49 : signed(25 DOWNTO 0);
    VARIABLE mul_temp_88 : signed(50 DOWNTO 0);
    VARIABLE add_cast_106 : signed(49 DOWNTO 0);
    VARIABLE add_cast_107 : signed(50 DOWNTO 0);
    VARIABLE add_cast_108 : unsigned(24 DOWNTO 0);
    VARIABLE add_cast_109 : unsigned(24 DOWNTO 0);
    VARIABLE add_temp_38 : unsigned(24 DOWNTO 0);
    VARIABLE cast_92 : signed(25 DOWNTO 0);
    VARIABLE mul_temp_89 : signed(49 DOWNTO 0);
    VARIABLE add_cast_110 : signed(48 DOWNTO 0);
    VARIABLE add_cast_111 : signed(50 DOWNTO 0);
    VARIABLE add_temp_39 : signed(50 DOWNTO 0);
    VARIABLE sub_cast_111 : signed(57 DOWNTO 0);
    VARIABLE sub_cast_112 : signed(57 DOWNTO 0);
    VARIABLE sub_temp_50 : signed(57 DOWNTO 0);
    VARIABLE mul_temp_90 : signed(106 DOWNTO 0);
    VARIABLE add_cast_112 : signed(110 DOWNTO 0);
    VARIABLE add_temp_40 : signed(110 DOWNTO 0);
    VARIABLE add_cast_113 : signed(111 DOWNTO 0);
    VARIABLE cast_93 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_91 : signed(48 DOWNTO 0);
    VARIABLE sub_cast_113 : signed(47 DOWNTO 0);
    VARIABLE sub_cast_114 : signed(49 DOWNTO 0);
    VARIABLE mul_temp_92 : signed(47 DOWNTO 0);
    VARIABLE sub_cast_115 : signed(49 DOWNTO 0);
    VARIABLE sub_temp_51 : signed(49 DOWNTO 0);
    VARIABLE add_cast_114 : unsigned(24 DOWNTO 0);
    VARIABLE add_cast_115 : unsigned(24 DOWNTO 0);
    VARIABLE add_temp_41 : unsigned(24 DOWNTO 0);
    VARIABLE mul_temp_93 : unsigned(48 DOWNTO 0);
    VARIABLE add_cast_116 : signed(51 DOWNTO 0);
    VARIABLE sub_cast_116 : signed(25 DOWNTO 0);
    VARIABLE sub_temp_52 : signed(25 DOWNTO 0);
    VARIABLE sub_cast_117 : signed(26 DOWNTO 0);
    VARIABLE sub_cast_118 : signed(26 DOWNTO 0);
    VARIABLE sub_temp_53 : signed(26 DOWNTO 0);
    VARIABLE mul_temp_94 : signed(50 DOWNTO 0);
    VARIABLE add_cast_117 : signed(51 DOWNTO 0);
    VARIABLE add_temp_42 : signed(51 DOWNTO 0);
    VARIABLE sub_cast_119 : signed(57 DOWNTO 0);
    VARIABLE sub_cast_120 : signed(57 DOWNTO 0);
    VARIABLE sub_temp_54 : signed(57 DOWNTO 0);
    VARIABLE mul_temp_95 : signed(107 DOWNTO 0);
    VARIABLE add_cast_118 : signed(111 DOWNTO 0);
    VARIABLE add_temp_43 : signed(111 DOWNTO 0);
    VARIABLE cast_94 : signed(24 DOWNTO 0);
    VARIABLE sub_cast_121 : unsigned(25 DOWNTO 0);
    VARIABLE sub_cast_122 : signed(27 DOWNTO 0);
    VARIABLE sub_cast_123 : signed(27 DOWNTO 0);
    VARIABLE sub_temp_55 : signed(27 DOWNTO 0);
    VARIABLE sub_cast_124 : signed(36 DOWNTO 0);
    VARIABLE sub_cast_125 : signed(36 DOWNTO 0);
    VARIABLE sub_temp_56 : signed(36 DOWNTO 0);
    VARIABLE mul_temp_96 : signed(61 DOWNTO 0);
    VARIABLE add_cast_119 : signed(60 DOWNTO 0);
    VARIABLE add_cast_120 : signed(61 DOWNTO 0);
    VARIABLE cast_95 : signed(24 DOWNTO 0);
    VARIABLE add_cast_121 : unsigned(25 DOWNTO 0);
    VARIABLE add_cast_122 : unsigned(26 DOWNTO 0);
    VARIABLE add_cast_123 : unsigned(26 DOWNTO 0);
    VARIABLE add_temp_44 : unsigned(26 DOWNTO 0);
    VARIABLE sub_cast_126 : signed(36 DOWNTO 0);
    VARIABLE sub_cast_127 : signed(36 DOWNTO 0);
    VARIABLE sub_temp_57 : signed(36 DOWNTO 0);
    VARIABLE mul_temp_97 : signed(61 DOWNTO 0);
    VARIABLE add_cast_124 : signed(60 DOWNTO 0);
    VARIABLE add_cast_125 : signed(61 DOWNTO 0);
    VARIABLE add_temp_45 : signed(61 DOWNTO 0);
    VARIABLE add_cast_126 : signed(109 DOWNTO 0);
    VARIABLE cast_96 : signed(24 DOWNTO 0);
    VARIABLE cast_97 : signed(25 DOWNTO 0);
    VARIABLE cast_98 : signed(25 DOWNTO 0);
    VARIABLE cast_99 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_98 : signed(48 DOWNTO 0);
    VARIABLE add_cast_127 : signed(50 DOWNTO 0);
    VARIABLE mul_temp_99 : signed(47 DOWNTO 0);
    VARIABLE add_cast_128 : signed(50 DOWNTO 0);
    VARIABLE add_temp_46 : signed(50 DOWNTO 0);
    VARIABLE cast_100 : signed(24 DOWNTO 0);
    VARIABLE sub_cast_128 : signed(25 DOWNTO 0);
    VARIABLE sub_temp_58 : signed(25 DOWNTO 0);
    VARIABLE sub_cast_129 : signed(26 DOWNTO 0);
    VARIABLE sub_cast_130 : signed(26 DOWNTO 0);
    VARIABLE sub_temp_59 : signed(26 DOWNTO 0);
    VARIABLE mul_temp_100 : signed(51 DOWNTO 0);
    VARIABLE add_cast_129 : signed(50 DOWNTO 0);
    VARIABLE add_cast_130 : signed(51 DOWNTO 0);
    VARIABLE sub_cast_131 : signed(25 DOWNTO 0);
    VARIABLE sub_cast_132 : signed(25 DOWNTO 0);
    VARIABLE sub_temp_60 : signed(25 DOWNTO 0);
    VARIABLE mul_temp_101 : signed(49 DOWNTO 0);
    VARIABLE add_cast_131 : signed(51 DOWNTO 0);
    VARIABLE add_temp_47 : signed(51 DOWNTO 0);
    VARIABLE sub_cast_133 : signed(57 DOWNTO 0);
    VARIABLE sub_cast_134 : signed(57 DOWNTO 0);
    VARIABLE sub_temp_61 : signed(57 DOWNTO 0);
    VARIABLE mul_temp_102 : signed(108 DOWNTO 0);
    VARIABLE add_cast_132 : signed(109 DOWNTO 0);
    VARIABLE add_temp_48 : signed(109 DOWNTO 0);
    VARIABLE add_cast_133 : signed(110 DOWNTO 0);
    VARIABLE cast_101 : signed(24 DOWNTO 0);
    VARIABLE cast_102 : signed(25 DOWNTO 0);
    VARIABLE cast_103 : signed(25 DOWNTO 0);
    VARIABLE cast_104 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_103 : signed(48 DOWNTO 0);
    VARIABLE add_cast_134 : signed(49 DOWNTO 0);
    VARIABLE mul_temp_104 : signed(47 DOWNTO 0);
    VARIABLE add_cast_135 : signed(49 DOWNTO 0);
    VARIABLE add_temp_49 : signed(49 DOWNTO 0);
    VARIABLE cast_105 : signed(24 DOWNTO 0);
    VARIABLE sub_cast_135 : signed(25 DOWNTO 0);
    VARIABLE sub_cast_136 : signed(25 DOWNTO 0);
    VARIABLE sub_temp_62 : signed(25 DOWNTO 0);
    VARIABLE mul_temp_105 : signed(50 DOWNTO 0);
    VARIABLE add_cast_136 : signed(49 DOWNTO 0);
    VARIABLE add_cast_137 : signed(50 DOWNTO 0);
    VARIABLE add_cast_138 : unsigned(24 DOWNTO 0);
    VARIABLE add_cast_139 : unsigned(24 DOWNTO 0);
    VARIABLE add_temp_50 : unsigned(24 DOWNTO 0);
    VARIABLE cast_106 : signed(25 DOWNTO 0);
    VARIABLE mul_temp_106 : signed(49 DOWNTO 0);
    VARIABLE add_cast_140 : signed(48 DOWNTO 0);
    VARIABLE add_cast_141 : signed(50 DOWNTO 0);
    VARIABLE add_temp_51 : signed(50 DOWNTO 0);
    VARIABLE sub_cast_137 : signed(57 DOWNTO 0);
    VARIABLE sub_cast_138 : signed(57 DOWNTO 0);
    VARIABLE sub_temp_63 : signed(57 DOWNTO 0);
    VARIABLE mul_temp_107 : signed(107 DOWNTO 0);
    VARIABLE add_cast_142 : signed(110 DOWNTO 0);
    VARIABLE add_temp_52 : signed(110 DOWNTO 0);
    VARIABLE add_cast_143 : signed(111 DOWNTO 0);
    VARIABLE cast_107 : signed(24 DOWNTO 0);
    VARIABLE mul_temp_108 : signed(48 DOWNTO 0);
    VARIABLE cast_108 : signed(47 DOWNTO 0);
    VARIABLE add_cast_144 : unsigned(24 DOWNTO 0);
    VARIABLE add_cast_145 : unsigned(24 DOWNTO 0);
    VARIABLE add_temp_53 : unsigned(24 DOWNTO 0);
    VARIABLE mul_temp_109 : unsigned(48 DOWNTO 0);
    VARIABLE add_cast_146 : signed(51 DOWNTO 0);
    VARIABLE sub_cast_139 : signed(25 DOWNTO 0);
    VARIABLE sub_temp_64 : signed(25 DOWNTO 0);
    VARIABLE sub_cast_140 : signed(26 DOWNTO 0);
    VARIABLE sub_cast_141 : signed(26 DOWNTO 0);
    VARIABLE sub_temp_65 : signed(26 DOWNTO 0);
    VARIABLE mul_temp_110 : signed(50 DOWNTO 0);
    VARIABLE add_cast_147 : signed(51 DOWNTO 0);
    VARIABLE add_temp_54 : signed(51 DOWNTO 0);
    VARIABLE sub_cast_142 : signed(57 DOWNTO 0);
    VARIABLE sub_cast_143 : signed(57 DOWNTO 0);
    VARIABLE sub_temp_66 : signed(57 DOWNTO 0);
    VARIABLE mul_temp_111 : signed(105 DOWNTO 0);
    VARIABLE add_cast_148 : signed(111 DOWNTO 0);
    VARIABLE add_temp_55 : signed(111 DOWNTO 0);
  BEGIN
    --HDL code generation from MATLAB function: Madgwick_correction_fixpt
    --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    --                                                                          %
    --       Generated by MATLAB 8.3, MATLAB Coder 2.6 and HDL Coder 3.4        %
    --                                                                          %
    --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
--'Madgwick_correction_fixpt:9' fm = fimath('RoundingMethod', 'Floor', 'OverflowAction', 'Wrap', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision');
    -- Auxiliary variables to avoid repeated arithmetic
    --'Madgwick_correction_fixpt:11' v2q0mx = fi(fi(2.0, 0, 2, 0, fm)*q0*mx, 0, 24, 23, fm);
    cast := resize(q0_1 & '0', 27);
    cast_0 := cast(25 DOWNTO 0);
    mul_temp := cast_0 * mx_1;
    v2q0mx := unsigned(mul_temp(24 DOWNTO 1));
    --'Madgwick_correction_fixpt:12' v2q0my = fi(fi(2.0, 0, 2, 0, fm)*q0*my, 0, 24, 23, fm);
    cast_1 := resize(q0_1 & '0', 27);
    cast_2 := cast_1(25 DOWNTO 0);
    mul_temp_0 := cast_2 * my_1;
    v2q0my := unsigned(mul_temp_0(24 DOWNTO 1));
    --'Madgwick_correction_fixpt:13' v2q0mz = fi(fi(2.0, 0, 2, 0, fm)*q0*mz, 0, 24, 23, fm);
    cast_3 := resize(q0_1 & '0', 27);
    cast_4 := cast_3(25 DOWNTO 0);
    mul_temp_1 := cast_4 * mz_1;
    v2q0mz := unsigned(mul_temp_1(24 DOWNTO 1));
    --'Madgwick_correction_fixpt:14' v2q1mx = fi(fi(2.0, 0, 2, 0, fm)*q1*mx, 0, 24, 23, fm);
    cast_5 := resize(q1_1 & '0', 27);
    cast_6 := cast_5(25 DOWNTO 0);
    mul_temp_2 := cast_6 * mx_1;
    v2q1mx := unsigned(mul_temp_2(24 DOWNTO 1));
    --'Madgwick_correction_fixpt:15' v2q0 = fi(fi(2.0, 0, 2, 0, fm)*q0, 0, 24, 23, fm);
    cast_7 := resize(q0_1 & '0', 27);
    cast_8 := cast_7(25 DOWNTO 0);
    v2q0 := unsigned(cast_8(12 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0');
    --'Madgwick_correction_fixpt:16' v2q1 = fi(fi(2.0, 0, 2, 0, fm)*q1, 0, 24, 23, fm);
    cast_9 := resize(q1_1 & '0', 27);
    cast_10 := cast_9(25 DOWNTO 0);
    v2q1 := unsigned(cast_10(12 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0');
    --'Madgwick_correction_fixpt:17' v2q2 = fi(fi(2.0, 0, 2, 0, fm)*q2, 0, 24, 23, fm);
    cast_11 := resize(q2_1 & '0', 27);
    cast_12 := cast_11(25 DOWNTO 0);
    v2q2 := unsigned(cast_12(12 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0');
    --'Madgwick_correction_fixpt:18' v2q3 = fi(fi(2.0, 0, 2, 0, fm)*q3, 0, 24, 23, fm);
    cast_13 := resize(q3_1 & '0', 27);
    cast_14 := cast_13(25 DOWNTO 0);
    v2q3 := unsigned(cast_14(12 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0');
    --'Madgwick_correction_fixpt:19' v2q0q2 = fi(fi(2.0, 0, 2, 0, fm)*q0*q2, 0, 24, 23, fm);
    cast_15 := resize(q0_1 & '0', 27);
    cast_16 := cast_15(25 DOWNTO 0);
    mul_temp_3 := cast_16 * q2_1;
    v2q0q2 := unsigned(mul_temp_3(24 DOWNTO 1));
    --'Madgwick_correction_fixpt:20' v2q2q3 = fi(fi(2.0, 0, 2, 0, fm)*q2*q3, 0, 24, 23, fm);
    cast_17 := resize(q2_1 & '0', 27);
    cast_18 := cast_17(25 DOWNTO 0);
    mul_temp_4 := cast_18 * q3_1;
    v2q2q3 := unsigned(mul_temp_4(24 DOWNTO 1));
    --'Madgwick_correction_fixpt:21' q0q0 = fi(q0*q0, 0, 24, 24, fm);
    mul_temp_5 := q0_1 * q0_1;
    q0q0 := unsigned(mul_temp_5(23 DOWNTO 0));
    --'Madgwick_correction_fixpt:22' q0q1 = fi(q0*q1, 0, 24, 24, fm);
    mul_temp_6 := q0_1 * q1_1;
    q0q1 := unsigned(mul_temp_6(23 DOWNTO 0));
    --'Madgwick_correction_fixpt:23' q0q2 = fi(q0*q2, 0, 24, 24, fm);
    mul_temp_7 := q0_1 * q2_1;
    q0q2 := unsigned(mul_temp_7(23 DOWNTO 0));
    --'Madgwick_correction_fixpt:24' q0q3 = fi(q0*q3, 0, 24, 24, fm);
    mul_temp_8 := q0_1 * q3_1;
    q0q3 := unsigned(mul_temp_8(23 DOWNTO 0));
    --'Madgwick_correction_fixpt:25' q1q1 = fi(q1*q1, 0, 24, 24, fm);
    mul_temp_9 := q1_1 * q1_1;
    q1q1 := unsigned(mul_temp_9(23 DOWNTO 0));
    --'Madgwick_correction_fixpt:26' q1q2 = fi(q1*q2, 0, 24, 24, fm);
    mul_temp_10 := q1_1 * q2_1;
    q1q2 := unsigned(mul_temp_10(23 DOWNTO 0));
    --'Madgwick_correction_fixpt:27' q1q3 = fi(q1*q3, 0, 24, 24, fm);
    mul_temp_11 := q1_1 * q3_1;
    q1q3 := unsigned(mul_temp_11(23 DOWNTO 0));
    --'Madgwick_correction_fixpt:28' q2q2 = fi(q2*q2, 0, 24, 24, fm);
    mul_temp_12 := q2_1 * q2_1;
    q2q2 := unsigned(mul_temp_12(23 DOWNTO 0));
    --'Madgwick_correction_fixpt:29' q2q3 = fi(q2*q3, 0, 24, 24, fm);
    mul_temp_13 := q2_1 * q3_1;
    q2q3 := unsigned(mul_temp_13(23 DOWNTO 0));
    --'Madgwick_correction_fixpt:30' q3q3 = fi(q3*q3, 0, 24, 24, fm);
    mul_temp_14 := q3_1 * q3_1;
    q3q3 := unsigned(mul_temp_14(23 DOWNTO 0));
    -- Reference direction of Earth's magnetic field
    
--'Madgwick_correction_fixpt:32' hx = fi(fi_signed(fi_signed(fi_signed(mx*q0q0) - v2q0my*q3 + v2q0mz*q2 + mx*q1q1 + v2q1*my*q2 + v2q1*mz*q3) - mx*q2q2) - mx*q3q3, 1, 24, 21, fm);
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    cast_19 := signed(resize(q0q0, 25));
    mul_temp_15 := mx_1 * cast_19;
    sub_cast := mul_temp_15(47 DOWNTO 0);
    sub_cast_0 := resize(sub_cast, 50);
    cast_20 := signed(resize(v2q0my, 25));
    mul_temp_16 := cast_20 * q3_1;
    sub_cast_1 := mul_temp_16(47 DOWNTO 0);
    sub_cast_2 := resize(sub_cast_1 & '0', 50);
    sub_temp := sub_cast_0 - sub_cast_2;
    add_cast := resize(sub_temp, 51);
    cast_21 := signed(resize(v2q0mz, 25));
    mul_temp_17 := cast_21 * q2_1;
    add_cast_0 := mul_temp_17(47 DOWNTO 0);
    add_cast_1 := resize(add_cast_0 & '0', 51);
    add_temp := add_cast + add_cast_1;
    add_cast_2 := resize(add_temp, 52);
    cast_22 := signed(resize(q1q1, 25));
    mul_temp_18 := mx_1 * cast_22;
    add_cast_3 := mul_temp_18(47 DOWNTO 0);
    add_cast_4 := resize(add_cast_3, 52);
    add_temp_0 := add_cast_2 + add_cast_4;
    add_cast_5 := resize(add_temp_0 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 73);
    cast_23 := signed(resize(v2q1, 25));
    mul_temp_19 := cast_23 * my_1;
    cast_24 := mul_temp_19(47 DOWNTO 0);
    mul_temp_20 := cast_24 * q2_1;
    add_cast_6 := resize(mul_temp_20, 73);
    add_temp_1 := add_cast_5 + add_cast_6;
    add_cast_7 := resize(add_temp_1, 74);
    cast_25 := signed(resize(v2q1, 25));
    mul_temp_21 := cast_25 * mz_1;
    cast_26 := mul_temp_21(47 DOWNTO 0);
    mul_temp_22 := cast_26 * q3_1;
    add_cast_8 := resize(mul_temp_22, 74);
    add_temp_2 := add_cast_7 + add_cast_8;
    sub_cast_3 := resize(add_temp_2, 75);
    cast_27 := signed(resize(q2q2, 25));
    mul_temp_23 := mx_1 * cast_27;
    sub_cast_4 := mul_temp_23(47 DOWNTO 0);
    sub_cast_5 := resize(sub_cast_4 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 75);
    sub_temp_0 := sub_cast_3 - sub_cast_5;
    sub_cast_6 := resize(sub_temp_0, 76);
    cast_28 := signed(resize(q3q3, 25));
    mul_temp_24 := mx_1 * cast_28;
    sub_cast_7 := mul_temp_24(47 DOWNTO 0);
    sub_cast_8 := resize(sub_cast_7 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 76);
    sub_temp_1 := sub_cast_6 - sub_cast_8;
    hx := sub_temp_1(49 DOWNTO 26);
    
--'Madgwick_correction_fixpt:33' hy = fi(fi_signed(fi_signed(fi_signed(v2q0mx*q3 + my*q0q0) - v2q0mz*q1 + v2q1mx*q2) - my*q1q1 + my*q2q2 + v2q2*mz*q3) - my*q3q3, 1, 24, 21, fm);
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    cast_29 := signed(resize(v2q0mx, 25));
    mul_temp_25 := cast_29 * q3_1;
    add_cast_9 := mul_temp_25(47 DOWNTO 0);
    add_cast_10 := resize(add_cast_9 & '0', 50);
    cast_30 := signed(resize(q0q0, 25));
    mul_temp_26 := my_1 * cast_30;
    add_cast_11 := mul_temp_26(47 DOWNTO 0);
    add_cast_12 := resize(add_cast_11, 50);
    add_temp_3 := add_cast_10 + add_cast_12;
    sub_cast_9 := resize(add_temp_3, 51);
    cast_31 := signed(resize(v2q0mz, 25));
    mul_temp_27 := cast_31 * q1_1;
    sub_cast_10 := mul_temp_27(47 DOWNTO 0);
    sub_cast_11 := resize(sub_cast_10 & '0', 51);
    sub_temp_2 := sub_cast_9 - sub_cast_11;
    add_cast_13 := resize(sub_temp_2, 52);
    cast_32 := signed(resize(v2q1mx, 25));
    mul_temp_28 := cast_32 * q2_1;
    add_cast_14 := mul_temp_28(47 DOWNTO 0);
    add_cast_15 := resize(add_cast_14 & '0', 52);
    add_temp_4 := add_cast_13 + add_cast_15;
    sub_cast_12 := resize(add_temp_4, 53);
    cast_33 := signed(resize(q1q1, 25));
    mul_temp_29 := my_1 * cast_33;
    sub_cast_13 := mul_temp_29(47 DOWNTO 0);
    sub_cast_14 := resize(sub_cast_13, 53);
    sub_temp_3 := sub_cast_12 - sub_cast_14;
    add_cast_16 := resize(sub_temp_3, 54);
    cast_34 := signed(resize(q2q2, 25));
    mul_temp_30 := my_1 * cast_34;
    add_cast_17 := mul_temp_30(47 DOWNTO 0);
    add_cast_18 := resize(add_cast_17, 54);
    add_temp_5 := add_cast_16 + add_cast_18;
    add_cast_19 := resize(add_temp_5 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 73);
    cast_35 := signed(resize(v2q2, 25));
    mul_temp_31 := cast_35 * mz_1;
    cast_36 := mul_temp_31(47 DOWNTO 0);
    mul_temp_32 := cast_36 * q3_1;
    add_cast_20 := resize(mul_temp_32, 73);
    add_temp_6 := add_cast_19 + add_cast_20;
    sub_cast_15 := resize(add_temp_6, 74);
    cast_37 := signed(resize(q3q3, 25));
    mul_temp_33 := my_1 * cast_37;
    sub_cast_16 := mul_temp_33(47 DOWNTO 0);
    sub_cast_17 := resize(sub_cast_16 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 74);
    sub_temp_4 := sub_cast_15 - sub_cast_17;
    hy := sub_temp_4(49 DOWNTO 26);
    --'Madgwick_correction_fixpt:34' v2bx = fi(sqrt( hx*hx + hy*hy ), 0, 24, 21, fm);
    mul_temp_34 := hx * hx;
    add_cast_21 := resize(mul_temp_34, 49);
    mul_temp_35 := hy * hy;
    add_cast_22 := resize(mul_temp_35, 49);
    cc := add_cast_21 + add_cast_22;
    IF cc <= to_signed(0, 49) THEN 
      yy := to_signed(2#0000000000000000000000000#, 25);
    ELSE 
      yy := to_signed(2#0000000000000000000000000#, 25);

      FOR ii IN 23 DOWNTO 0 LOOP
        cast_38(ii) := unsigned(to_signed(ii, 32)(7 DOWNTO 0));
        sll_temp(ii) := to_signed(2#0000000000000000000000001#, 25) sll to_integer(cast_38(ii));
        ytemp := yy OR sll_temp(ii);
        mul_temp_36(ii) := ytemp * ytemp;
        cast_39(ii) := resize(cc, 50);
        IF mul_temp_36(ii) <= cast_39(ii) THEN 
          yy := ytemp;
        END IF;
      END LOOP;

    END IF;
    v2bx := unsigned(yy(23 DOWNTO 0));
    
--'Madgwick_correction_fixpt:35' v2bz = fi(fi_signed(fi_signed(fi_uminus(v2q0mx)*q2 + v2q0my*q1 + mz*q0q0 + v2q1mx*q3) - mz*q1q1 + v2q2*my*q3) - mz*q2q2 + mz*q3q3, 1, 24, 21, fm);
    --'Madgwick_correction_fixpt:59' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:60' if isfi( a )
    --'Madgwick_correction_fixpt:61' nt = numerictype( a );
    --'Madgwick_correction_fixpt:62' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:63' y = -fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    cast_40 := signed(resize(v2q0mx, 25));
    cast_41 := resize(cast_40, 26);
    cast_42 :=  - (cast_41);
    cast_43 := cast_42(24 DOWNTO 0);
    mul_temp_37 := cast_43 * q2_1;
    add_cast_23 := resize(mul_temp_37, 50);
    cast_44 := signed(resize(v2q0my, 25));
    mul_temp_38 := cast_44 * q1_1;
    add_cast_24 := mul_temp_38(47 DOWNTO 0);
    add_cast_25 := resize(add_cast_24, 50);
    add_temp_7 := add_cast_23 + add_cast_25;
    add_cast_26 := resize(add_temp_7 & '0', 52);
    cast_45 := signed(resize(q0q0, 25));
    mul_temp_39 := mz_1 * cast_45;
    add_cast_27 := mul_temp_39(47 DOWNTO 0);
    add_cast_28 := resize(add_cast_27, 52);
    add_temp_8 := add_cast_26 + add_cast_28;
    add_cast_29 := resize(add_temp_8, 53);
    cast_46 := signed(resize(v2q1mx, 25));
    mul_temp_40 := cast_46 * q3_1;
    add_cast_30 := mul_temp_40(47 DOWNTO 0);
    add_cast_31 := resize(add_cast_30 & '0', 53);
    add_temp_9 := add_cast_29 + add_cast_31;
    sub_cast_18 := resize(add_temp_9, 54);
    cast_47 := signed(resize(q1q1, 25));
    mul_temp_41 := mz_1 * cast_47;
    sub_cast_19 := mul_temp_41(47 DOWNTO 0);
    sub_cast_20 := resize(sub_cast_19, 54);
    sub_temp_5 := sub_cast_18 - sub_cast_20;
    add_cast_32 := resize(sub_temp_5 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 73);
    cast_48 := signed(resize(v2q2, 25));
    mul_temp_42 := cast_48 * my_1;
    cast_49 := mul_temp_42(47 DOWNTO 0);
    mul_temp_43 := cast_49 * q3_1;
    add_cast_33 := resize(mul_temp_43, 73);
    add_temp_10 := add_cast_32 + add_cast_33;
    sub_cast_21 := resize(add_temp_10, 74);
    cast_50 := signed(resize(q2q2, 25));
    mul_temp_44 := mz_1 * cast_50;
    sub_cast_22 := mul_temp_44(47 DOWNTO 0);
    sub_cast_23 := resize(sub_cast_22 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 74);
    sub_temp_6 := sub_cast_21 - sub_cast_23;
    add_cast_34 := resize(sub_temp_6, 75);
    cast_51 := signed(resize(q3q3, 25));
    mul_temp_45 := mz_1 * cast_51;
    add_cast_35 := mul_temp_45(47 DOWNTO 0);
    add_cast_36 := resize(add_cast_35 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 75);
    add_temp_11 := add_cast_34 + add_cast_36;
    v2bz := add_temp_11(49 DOWNTO 26);
    --'Madgwick_correction_fixpt:36' v4bx = fi(fi(2.0, 0, 2, 0, fm)*v2bx, 0, 24, 20, fm);
    cast_52 := resize(v2bx & '0', 26);
    v4bx := cast_52(24 DOWNTO 1);
    --'Madgwick_correction_fixpt:37' v4bz = fi(fi(2.0, 0, 2, 0, fm)*v2bz, 1, 24, 20, fm);
    cast_53 := resize(v2bz & '0', 27);
    cast_54 := cast_53(25 DOWNTO 0);
    v4bz := cast_54(24 DOWNTO 1);
    -- Gradient decent algorithm corrective step
    
--'Madgwick_correction_fixpt:39' s0 = fi(fi_signed(fi_uminus(v2q2)*(fi_signed(fi_signed(fi(2.0, 0, 2, 0, fm)*q1q3) - v2q0q2) - ax) + v2q1*(fi_signed(fi(2.0, 0, 2, 0, fm)*q0q1 + v2q2q3) - ay)) - v2bz*q2*(fi_signed(v2bx*(fi_signed(fi_signed(fi(0.5, 0, 24, 24, fm)) - q2q2) - q3q3) + v2bz*(fi_signed(q1q3) - q0q2)) - mx) + (fi_uminus(v2bx)*q3 + v2bz*q1)*(fi_signed(v2bx*(fi_signed(q1q2) - q0q3) + v2bz*(q0q1 + q2q3)) - my) + v2bx*q2*(fi_signed(v2bx*(q0q2 + q1q3) + v2bz*(fi_signed(fi_signed(fi(0.5, 0, 24, 24, fm)) - q1q1) - q2q2)) - mz), 1, 24, 12, fm);
    --'Madgwick_correction_fixpt:59' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:60' if isfi( a )
    --'Madgwick_correction_fixpt:61' nt = numerictype( a );
    --'Madgwick_correction_fixpt:62' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:63' y = -fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:49' nt = numerictype( a );
    --'Madgwick_correction_fixpt:50' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:51' y = fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:49' nt = numerictype( a );
    --'Madgwick_correction_fixpt:50' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:51' y = fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:49' nt = numerictype( a );
    --'Madgwick_correction_fixpt:50' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:51' y = fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:59' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:60' if isfi( a )
    --'Madgwick_correction_fixpt:61' nt = numerictype( a );
    --'Madgwick_correction_fixpt:62' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:63' y = -fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:49' nt = numerictype( a );
    --'Madgwick_correction_fixpt:50' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:51' y = fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    
--'Madgwick_correction_fixpt:40' s1 = fi(fi_signed(v2q3*(fi_signed(fi_signed(fi(2.0, 0, 2, 0, fm)*q1q3) - v2q0q2) - ax) + v2q0*(fi_signed(fi(2.0, 0, 2, 0, fm)*q0q1 + v2q2q3) - ay)) - fi(4.0, 0, 3, 0, fm)*q1*(fi_signed(fi_signed(fi_signed(fi(1, 0, 1, 0, fm)) - fi(2.0, 0, 2, 0, fm)*q1q1) - fi(2.0, 0, 2, 0, fm)*q2q2) - az) + v2bz*q3*(fi_signed(v2bx*(fi_signed(fi_signed(fi(0.5, 0, 24, 24, fm)) - q2q2) - q3q3) + v2bz*(fi_signed(q1q3) - q0q2)) - mx) + (v2bx*q2 + v2bz*q0)*(fi_signed(v2bx*(fi_signed(q1q2) - q0q3) + v2bz*(q0q1 + q2q3)) - my) + (fi_signed(v2bx*q3) - v4bz*q1)*(fi_signed(v2bx*(q0q2 + q1q3) + v2bz*(fi_signed(fi_signed(fi(0.5, 0, 24, 24, fm)) - q1q1) - q2q2)) - mz), 1, 24, 12, fm);
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:49' nt = numerictype( a );
    --'Madgwick_correction_fixpt:50' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:51' y = fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:49' nt = numerictype( a );
    --'Madgwick_correction_fixpt:50' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:51' y = fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:49' nt = numerictype( a );
    --'Madgwick_correction_fixpt:50' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:51' y = fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:49' nt = numerictype( a );
    --'Madgwick_correction_fixpt:50' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:51' y = fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    
--'Madgwick_correction_fixpt:41' s2 = fi(fi_signed(fi_uminus(v2q0)*(fi_signed(fi_signed(fi(2.0, 0, 2, 0, fm)*q1q3) - v2q0q2) - ax) + v2q3*(fi_signed(fi(2.0, 0, 2, 0, fm)*q0q1 + v2q2q3) - ay)) - fi(4.0, 0, 3, 0, fm)*q2*(fi_signed(fi_signed(fi_signed(fi(1, 0, 1, 0, fm)) - fi(2.0, 0, 2, 0, fm)*q1q1) - fi(2.0, 0, 2, 0, fm)*q2q2) - az) + (fi_signed(fi_uminus(v4bx)*q2) - v2bz*q0)*(fi_signed(v2bx*(fi_signed(fi_signed(fi(0.5, 0, 24, 24, fm)) - q2q2) - q3q3) + v2bz*(fi_signed(q1q3) - q0q2)) - mx) + (v2bx*q1 + v2bz*q3)*(fi_signed(v2bx*(fi_signed(q1q2) - q0q3) + v2bz*(q0q1 + q2q3)) - my) + (fi_signed(v2bx*q0) - v4bz*q2)*(fi_signed(v2bx*(q0q2 + q1q3) + v2bz*(fi_signed(fi_signed(fi(0.5, 0, 24, 24, fm)) - q1q1) - q2q2)) - mz), 1, 24, 12, fm);
    --'Madgwick_correction_fixpt:59' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:60' if isfi( a )
    --'Madgwick_correction_fixpt:61' nt = numerictype( a );
    --'Madgwick_correction_fixpt:62' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:63' y = -fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:49' nt = numerictype( a );
    --'Madgwick_correction_fixpt:50' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:51' y = fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:49' nt = numerictype( a );
    --'Madgwick_correction_fixpt:50' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:51' y = fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:59' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:60' if isfi( a )
    --'Madgwick_correction_fixpt:61' nt = numerictype( a );
    --'Madgwick_correction_fixpt:62' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:63' y = -fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:49' nt = numerictype( a );
    --'Madgwick_correction_fixpt:50' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:51' y = fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:49' nt = numerictype( a );
    --'Madgwick_correction_fixpt:50' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:51' y = fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    
--'Madgwick_correction_fixpt:42' s3 = fi(v2q1*(fi_signed(fi_signed(fi(2.0, 0, 2, 0, fm)*q1q3) - v2q0q2) - ax) + v2q2*(fi_signed(fi(2.0, 0, 2, 0, fm)*q0q1 + v2q2q3) - ay) + (fi_uminus(v4bx)*q3 + v2bz*q1)*(fi_signed(v2bx*(fi_signed(fi_signed(fi(0.5, 0, 24, 24, fm)) - q2q2) - q3q3) + v2bz*(fi_signed(q1q3) - q0q2)) - mx) + (fi_uminus(v2bx)*q0 + v2bz*q2)*(fi_signed(v2bx*(fi_signed(q1q2) - q0q3) + v2bz*(q0q1 + q2q3)) - my) + v2bx*q1*(fi_signed(v2bx*(q0q2 + q1q3) + v2bz*(fi_signed(fi_signed(fi(0.5, 0, 24, 24, fm)) - q1q1) - q2q2)) - mz), 1, 24, 12, fm);
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:49' nt = numerictype( a );
    --'Madgwick_correction_fixpt:50' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:51' y = fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:49' nt = numerictype( a );
    --'Madgwick_correction_fixpt:50' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:51' y = fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:59' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:60' if isfi( a )
    --'Madgwick_correction_fixpt:61' nt = numerictype( a );
    --'Madgwick_correction_fixpt:62' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:63' y = -fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:49' nt = numerictype( a );
    --'Madgwick_correction_fixpt:50' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:51' y = fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:59' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:60' if isfi( a )
    --'Madgwick_correction_fixpt:61' nt = numerictype( a );
    --'Madgwick_correction_fixpt:62' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:63' y = -fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:49' nt = numerictype( a );
    --'Madgwick_correction_fixpt:50' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
    --'Madgwick_correction_fixpt:51' y = fi( a, new_nt, fimath( a ) );
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    --'Madgwick_correction_fixpt:47' coder.inline( 'always' );
    --'Madgwick_correction_fixpt:48' if isfi( a ) && ~(issigned( a ))
    --'Madgwick_correction_fixpt:52' else
    --'Madgwick_correction_fixpt:53' y = a;
    cast_55 := signed(resize(v2q2, 25));
    cast_56 := resize(cast_55, 26);
    cast_57 :=  - (cast_56);
    cast_58 := cast_57(24 DOWNTO 0);
    sub_cast_24 := resize(q1q3 & '0', 26);
    sub_cast_25 := signed(resize(sub_cast_24, 28));
    sub_cast_26 := signed(resize(v2q0q2 & '0', 28));
    sub_temp_7 := sub_cast_25 - sub_cast_26;
    sub_cast_27 := resize(sub_temp_7, 37);
    sub_cast_28 := resize(ax_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 37);
    sub_temp_8 := sub_cast_27 - sub_cast_28;
    mul_temp_46 := cast_58 * sub_temp_8;
    add_cast_37 := resize(mul_temp_46, 63);
    cast_59 := signed(resize(v2q1, 25));
    add_cast_38 := resize(q0q1 & '0', 26);
    add_cast_39 := resize(add_cast_38, 27);
    add_cast_40 := resize(v2q2q3 & '0', 27);
    add_temp_12 := add_cast_39 + add_cast_40;
    sub_cast_29 := signed(resize(add_temp_12, 37));
    sub_cast_30 := resize(ay_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 37);
    sub_temp_9 := sub_cast_29 - sub_cast_30;
    mul_temp_47 := cast_59 * sub_temp_9;
    add_cast_41 := mul_temp_47(60 DOWNTO 0);
    add_cast_42 := resize(add_cast_41, 63);
    add_temp_13 := add_cast_37 + add_cast_42;
    sub_cast_31 := resize(add_temp_13 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
      & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
      '0' & '0', 107);
    mul_temp_48 := v2bz * q2_1;
    cast_60 := signed(resize(v2bx, 25));
    sub_cast_32 := signed(resize(q2q2, 26));
    sub_temp_10 := 8388608 - sub_cast_32;
    sub_cast_33 := resize(sub_temp_10, 27);
    sub_cast_34 := signed(resize(q3q3, 27));
    sub_temp_11 := sub_cast_33 - sub_cast_34;
    mul_temp_49 := cast_60 * sub_temp_11;
    add_cast_43 := mul_temp_49(50 DOWNTO 0);
    add_cast_44 := resize(add_cast_43, 52);
    sub_cast_35 := signed(resize(q1q3, 26));
    sub_cast_36 := signed(resize(q0q2, 26));
    sub_temp_12 := sub_cast_35 - sub_cast_36;
    mul_temp_50 := v2bz * sub_temp_12;
    add_cast_45 := resize(mul_temp_50, 52);
    add_temp_14 := add_cast_44 + add_cast_45;
    sub_cast_37 := resize(add_temp_14, 58);
    sub_cast_38 := resize(mx_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
      & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
      '0' & '0' & '0', 58);
    sub_temp_13 := sub_cast_37 - sub_cast_38;
    mul_temp_51 := mul_temp_48 * sub_temp_13;
    sub_cast_39 := resize(mul_temp_51, 107);
    sub_temp_14 := sub_cast_31 - sub_cast_39;
    add_cast_46 := resize(sub_temp_14, 109);
    cast_61 := signed(resize(v2bx, 25));
    cast_62 := resize(cast_61, 26);
    cast_63 :=  - (cast_62);
    cast_64 := cast_63(24 DOWNTO 0);
    mul_temp_52 := cast_64 * q3_1;
    add_cast_47 := resize(mul_temp_52, 50);
    mul_temp_53 := v2bz * q1_1;
    add_cast_48 := resize(mul_temp_53, 50);
    add_temp_15 := add_cast_47 + add_cast_48;
    cast_65 := signed(resize(v2bx, 25));
    sub_cast_40 := signed(resize(q1q2, 26));
    sub_cast_41 := signed(resize(q0q3, 26));
    sub_temp_15 := sub_cast_40 - sub_cast_41;
    mul_temp_54 := cast_65 * sub_temp_15;
    add_cast_49 := mul_temp_54(49 DOWNTO 0);
    add_cast_50 := resize(add_cast_49, 51);
    add_cast_51 := resize(q0q1, 25);
    add_cast_52 := resize(q2q3, 25);
    add_temp_16 := add_cast_51 + add_cast_52;
    cast_66 := signed(resize(add_temp_16, 26));
    mul_temp_55 := v2bz * cast_66;
    add_cast_53 := mul_temp_55(48 DOWNTO 0);
    add_cast_54 := resize(add_cast_53, 51);
    add_temp_17 := add_cast_50 + add_cast_54;
    sub_cast_42 := resize(add_temp_17, 58);
    sub_cast_43 := resize(my_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
      & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
      '0' & '0' & '0', 58);
    sub_temp_16 := sub_cast_42 - sub_cast_43;
    mul_temp_56 := add_temp_15 * sub_temp_16;
    add_cast_55 := resize(mul_temp_56, 109);
    add_temp_18 := add_cast_46 + add_cast_55;
    add_cast_56 := resize(add_temp_18, 110);
    cast_67 := signed(resize(v2bx, 25));
    mul_temp_57 := cast_67 * q2_1;
    cast_68 := mul_temp_57(47 DOWNTO 0);
    add_cast_57 := resize(q0q2, 25);
    add_cast_58 := resize(q1q3, 25);
    add_temp_19 := add_cast_57 + add_cast_58;
    mul_temp_58 := v2bx * add_temp_19;
    add_cast_59 := signed(resize(mul_temp_58, 52));
    sub_cast_44 := signed(resize(q1q1, 26));
    sub_temp_17 := 8388608 - sub_cast_44;
    sub_cast_45 := resize(sub_temp_17, 27);
    sub_cast_46 := signed(resize(q2q2, 27));
    sub_temp_18 := sub_cast_45 - sub_cast_46;
    mul_temp_59 := v2bz * sub_temp_18;
    add_cast_60 := resize(mul_temp_59, 52);
    add_temp_20 := add_cast_59 + add_cast_60;
    sub_cast_47 := resize(add_temp_20, 58);
    sub_cast_48 := resize(mz_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
      & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
      '0' & '0' & '0', 58);
    sub_temp_19 := sub_cast_47 - sub_cast_48;
    mul_temp_60 := cast_68 * sub_temp_19;
    add_cast_61 := resize(mul_temp_60, 110);
    add_temp_21 := add_cast_56 + add_cast_61;
    s0_tmp <= add_temp_21(89 DOWNTO 66);
    cast_69 := signed(resize(v2q3, 25));
    sub_cast_49 := resize(q1q3 & '0', 26);
    sub_cast_50 := signed(resize(sub_cast_49, 28));
    sub_cast_51 := signed(resize(v2q0q2 & '0', 28));
    sub_temp_20 := sub_cast_50 - sub_cast_51;
    sub_cast_52 := resize(sub_temp_20, 37);
    sub_cast_53 := resize(ax_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 37);
    sub_temp_21 := sub_cast_52 - sub_cast_53;
    mul_temp_61 := cast_69 * sub_temp_21;
    add_cast_62 := mul_temp_61(60 DOWNTO 0);
    add_cast_63 := resize(add_cast_62, 62);
    cast_70 := signed(resize(v2q0, 25));
    add_cast_64 := resize(q0q1 & '0', 26);
    add_cast_65 := resize(add_cast_64, 27);
    add_cast_66 := resize(v2q2q3 & '0', 27);
    add_temp_22 := add_cast_65 + add_cast_66;
    sub_cast_54 := signed(resize(add_temp_22, 37));
    sub_cast_55 := resize(ay_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 37);
    sub_temp_22 := sub_cast_54 - sub_cast_55;
    mul_temp_62 := cast_70 * sub_temp_22;
    add_cast_67 := mul_temp_62(60 DOWNTO 0);
    add_cast_68 := resize(add_cast_67, 62);
    add_temp_23 := add_cast_63 + add_cast_68;
    sub_cast_56 := resize(add_temp_23, 76);
    cast_71 := resize(q1_1 & '0' & '0', 28);
    cast_72 := cast_71(26 DOWNTO 0);
    sub_cast_57 := resize(q1q1 & '0', 26);
    sub_cast_58 := signed(resize(sub_cast_57, 27));
    sub_temp_23 := 16777216 - sub_cast_58;
    sub_cast_59 := resize(sub_temp_23, 28);
    sub_cast_60 := resize(q2q2 & '0', 26);
    sub_cast_61 := signed(resize(sub_cast_60, 28));
    sub_temp_24 := sub_cast_59 - sub_cast_61;
    sub_cast_62 := resize(sub_temp_24, 37);
    sub_cast_63 := resize(az_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 37);
    sub_temp_25 := sub_cast_62 - sub_cast_63;
    mul_temp_63 := cast_72 * sub_temp_25;
    sub_cast_64 := resize(mul_temp_63 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 76);
    sub_temp_26 := sub_cast_56 - sub_cast_64;
    add_cast_69 := resize(sub_temp_26 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
      & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
      '0' & '0', 108);
    mul_temp_64 := v2bz * q3_1;
    cast_73 := signed(resize(v2bx, 25));
    sub_cast_65 := signed(resize(q2q2, 26));
    sub_temp_27 := 8388608 - sub_cast_65;
    sub_cast_66 := resize(sub_temp_27, 27);
    sub_cast_67 := signed(resize(q3q3, 27));
    sub_temp_28 := sub_cast_66 - sub_cast_67;
    mul_temp_65 := cast_73 * sub_temp_28;
    add_cast_70 := mul_temp_65(50 DOWNTO 0);
    add_cast_71 := resize(add_cast_70, 52);
    sub_cast_68 := signed(resize(q1q3, 26));
    sub_cast_69 := signed(resize(q0q2, 26));
    sub_temp_29 := sub_cast_68 - sub_cast_69;
    mul_temp_66 := v2bz * sub_temp_29;
    add_cast_72 := resize(mul_temp_66, 52);
    add_temp_24 := add_cast_71 + add_cast_72;
    sub_cast_70 := resize(add_temp_24, 58);
    sub_cast_71 := resize(mx_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
      & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
      '0' & '0' & '0', 58);
    sub_temp_30 := sub_cast_70 - sub_cast_71;
    mul_temp_67 := mul_temp_64 * sub_temp_30;
    add_cast_73 := resize(mul_temp_67, 108);
    add_temp_25 := add_cast_69 + add_cast_73;
    add_cast_74 := resize(add_temp_25, 109);
    cast_74 := signed(resize(v2bx, 25));
    mul_temp_68 := cast_74 * q2_1;
    add_cast_75 := mul_temp_68(47 DOWNTO 0);
    add_cast_76 := resize(add_cast_75, 49);
    mul_temp_69 := v2bz * q0_1;
    add_cast_77 := resize(mul_temp_69, 49);
    add_temp_26 := add_cast_76 + add_cast_77;
    cast_75 := signed(resize(v2bx, 25));
    sub_cast_72 := signed(resize(q1q2, 26));
    sub_cast_73 := signed(resize(q0q3, 26));
    sub_temp_31 := sub_cast_72 - sub_cast_73;
    mul_temp_70 := cast_75 * sub_temp_31;
    add_cast_78 := mul_temp_70(49 DOWNTO 0);
    add_cast_79 := resize(add_cast_78, 51);
    add_cast_80 := resize(q0q1, 25);
    add_cast_81 := resize(q2q3, 25);
    add_temp_27 := add_cast_80 + add_cast_81;
    cast_76 := signed(resize(add_temp_27, 26));
    mul_temp_71 := v2bz * cast_76;
    add_cast_82 := mul_temp_71(48 DOWNTO 0);
    add_cast_83 := resize(add_cast_82, 51);
    add_temp_28 := add_cast_79 + add_cast_83;
    sub_cast_74 := resize(add_temp_28, 58);
    sub_cast_75 := resize(my_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
      & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
      '0' & '0' & '0', 58);
    sub_temp_32 := sub_cast_74 - sub_cast_75;
    mul_temp_72 := add_temp_26 * sub_temp_32;
    add_cast_84 := resize(mul_temp_72, 109);
    add_temp_29 := add_cast_74 + add_cast_84;
    add_cast_85 := resize(add_temp_29, 110);
    cast_77 := signed(resize(v2bx, 25));
    mul_temp_73 := cast_77 * q3_1;
    sub_cast_76 := mul_temp_73(47 DOWNTO 0);
    sub_cast_77 := resize(sub_cast_76, 50);
    mul_temp_74 := v4bz * q1_1;
    sub_cast_78 := resize(mul_temp_74 & '0', 50);
    sub_temp_33 := sub_cast_77 - sub_cast_78;
    add_cast_86 := resize(q0q2, 25);
    add_cast_87 := resize(q1q3, 25);
    add_temp_30 := add_cast_86 + add_cast_87;
    mul_temp_75 := v2bx * add_temp_30;
    add_cast_88 := signed(resize(mul_temp_75, 52));
    sub_cast_79 := signed(resize(q1q1, 26));
    sub_temp_34 := 8388608 - sub_cast_79;
    sub_cast_80 := resize(sub_temp_34, 27);
    sub_cast_81 := signed(resize(q2q2, 27));
    sub_temp_35 := sub_cast_80 - sub_cast_81;
    mul_temp_76 := v2bz * sub_temp_35;
    add_cast_89 := resize(mul_temp_76, 52);
    add_temp_31 := add_cast_88 + add_cast_89;
    sub_cast_82 := resize(add_temp_31, 58);
    sub_cast_83 := resize(mz_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
      & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
      '0' & '0' & '0', 58);
    sub_temp_36 := sub_cast_82 - sub_cast_83;
    mul_temp_77 := sub_temp_33 * sub_temp_36;
    add_cast_90 := resize(mul_temp_77, 110);
    add_temp_32 := add_cast_85 + add_cast_90;
    s1_tmp <= add_temp_32(89 DOWNTO 66);
    cast_78 := signed(resize(v2q0, 25));
    cast_79 := resize(cast_78, 26);
    cast_80 :=  - (cast_79);
    cast_81 := cast_80(24 DOWNTO 0);
    sub_cast_84 := resize(q1q3 & '0', 26);
    sub_cast_85 := signed(resize(sub_cast_84, 28));
    sub_cast_86 := signed(resize(v2q0q2 & '0', 28));
    sub_temp_37 := sub_cast_85 - sub_cast_86;
    sub_cast_87 := resize(sub_temp_37, 37);
    sub_cast_88 := resize(ax_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 37);
    sub_temp_38 := sub_cast_87 - sub_cast_88;
    mul_temp_78 := cast_81 * sub_temp_38;
    add_cast_91 := resize(mul_temp_78, 63);
    cast_82 := signed(resize(v2q3, 25));
    add_cast_92 := resize(q0q1 & '0', 26);
    add_cast_93 := resize(add_cast_92, 27);
    add_cast_94 := resize(v2q2q3 & '0', 27);
    add_temp_33 := add_cast_93 + add_cast_94;
    sub_cast_89 := signed(resize(add_temp_33, 37));
    sub_cast_90 := resize(ay_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 37);
    sub_temp_39 := sub_cast_89 - sub_cast_90;
    mul_temp_79 := cast_82 * sub_temp_39;
    add_cast_95 := mul_temp_79(60 DOWNTO 0);
    add_cast_96 := resize(add_cast_95, 63);
    add_temp_34 := add_cast_91 + add_cast_96;
    sub_cast_91 := resize(add_temp_34, 76);
    cast_83 := resize(q2_1 & '0' & '0', 28);
    cast_84 := cast_83(26 DOWNTO 0);
    sub_cast_92 := resize(q1q1 & '0', 26);
    sub_cast_93 := signed(resize(sub_cast_92, 27));
    sub_temp_40 := 16777216 - sub_cast_93;
    sub_cast_94 := resize(sub_temp_40, 28);
    sub_cast_95 := resize(q2q2 & '0', 26);
    sub_cast_96 := signed(resize(sub_cast_95, 28));
    sub_temp_41 := sub_cast_94 - sub_cast_96;
    sub_cast_97 := resize(sub_temp_41, 37);
    sub_cast_98 := resize(az_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 37);
    sub_temp_42 := sub_cast_97 - sub_cast_98;
    mul_temp_80 := cast_84 * sub_temp_42;
    sub_cast_99 := resize(mul_temp_80 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 76);
    sub_temp_43 := sub_cast_91 - sub_cast_99;
    add_cast_97 := resize(sub_temp_43 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
      & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
      '0' & '0', 110);
    cast_85 := signed(resize(v4bx, 25));
    cast_86 := resize(cast_85, 26);
    cast_87 :=  - (cast_86);
    cast_88 := cast_87(24 DOWNTO 0);
    mul_temp_81 := cast_88 * q2_1;
    sub_cast_100 := resize(mul_temp_81 & '0', 51);
    mul_temp_82 := v2bz * q0_1;
    sub_cast_101 := resize(mul_temp_82, 51);
    sub_temp_44 := sub_cast_100 - sub_cast_101;
    cast_89 := signed(resize(v2bx, 25));
    sub_cast_102 := signed(resize(q2q2, 26));
    sub_temp_45 := 8388608 - sub_cast_102;
    sub_cast_103 := resize(sub_temp_45, 27);
    sub_cast_104 := signed(resize(q3q3, 27));
    sub_temp_46 := sub_cast_103 - sub_cast_104;
    mul_temp_83 := cast_89 * sub_temp_46;
    add_cast_98 := mul_temp_83(50 DOWNTO 0);
    add_cast_99 := resize(add_cast_98, 52);
    sub_cast_105 := signed(resize(q1q3, 26));
    sub_cast_106 := signed(resize(q0q2, 26));
    sub_temp_47 := sub_cast_105 - sub_cast_106;
    mul_temp_84 := v2bz * sub_temp_47;
    add_cast_100 := resize(mul_temp_84, 52);
    add_temp_35 := add_cast_99 + add_cast_100;
    sub_cast_107 := resize(add_temp_35, 58);
    sub_cast_108 := resize(mx_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
      & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
      '0' & '0' & '0', 58);
    sub_temp_48 := sub_cast_107 - sub_cast_108;
    mul_temp_85 := sub_temp_44 * sub_temp_48;
    add_cast_101 := resize(mul_temp_85, 110);
    add_temp_36 := add_cast_97 + add_cast_101;
    add_cast_102 := resize(add_temp_36, 111);
    cast_90 := signed(resize(v2bx, 25));
    mul_temp_86 := cast_90 * q1_1;
    add_cast_103 := mul_temp_86(47 DOWNTO 0);
    add_cast_104 := resize(add_cast_103, 49);
    mul_temp_87 := v2bz * q3_1;
    add_cast_105 := resize(mul_temp_87, 49);
    add_temp_37 := add_cast_104 + add_cast_105;
    cast_91 := signed(resize(v2bx, 25));
    sub_cast_109 := signed(resize(q1q2, 26));
    sub_cast_110 := signed(resize(q0q3, 26));
    sub_temp_49 := sub_cast_109 - sub_cast_110;
    mul_temp_88 := cast_91 * sub_temp_49;
    add_cast_106 := mul_temp_88(49 DOWNTO 0);
    add_cast_107 := resize(add_cast_106, 51);
    add_cast_108 := resize(q0q1, 25);
    add_cast_109 := resize(q2q3, 25);
    add_temp_38 := add_cast_108 + add_cast_109;
    cast_92 := signed(resize(add_temp_38, 26));
    mul_temp_89 := v2bz * cast_92;
    add_cast_110 := mul_temp_89(48 DOWNTO 0);
    add_cast_111 := resize(add_cast_110, 51);
    add_temp_39 := add_cast_107 + add_cast_111;
    sub_cast_111 := resize(add_temp_39, 58);
    sub_cast_112 := resize(my_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
      & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
      '0' & '0' & '0', 58);
    sub_temp_50 := sub_cast_111 - sub_cast_112;
    mul_temp_90 := add_temp_37 * sub_temp_50;
    add_cast_112 := resize(mul_temp_90, 111);
    add_temp_40 := add_cast_102 + add_cast_112;
    add_cast_113 := resize(add_temp_40, 112);
    cast_93 := signed(resize(v2bx, 25));
    mul_temp_91 := cast_93 * q0_1;
    sub_cast_113 := mul_temp_91(47 DOWNTO 0);
    sub_cast_114 := resize(sub_cast_113, 50);
    mul_temp_92 := v4bz * q2_1;
    sub_cast_115 := resize(mul_temp_92 & '0', 50);
    sub_temp_51 := sub_cast_114 - sub_cast_115;
    add_cast_114 := resize(q0q2, 25);
    add_cast_115 := resize(q1q3, 25);
    add_temp_41 := add_cast_114 + add_cast_115;
    mul_temp_93 := v2bx * add_temp_41;
    add_cast_116 := signed(resize(mul_temp_93, 52));
    sub_cast_116 := signed(resize(q1q1, 26));
    sub_temp_52 := 8388608 - sub_cast_116;
    sub_cast_117 := resize(sub_temp_52, 27);
    sub_cast_118 := signed(resize(q2q2, 27));
    sub_temp_53 := sub_cast_117 - sub_cast_118;
    mul_temp_94 := v2bz * sub_temp_53;
    add_cast_117 := resize(mul_temp_94, 52);
    add_temp_42 := add_cast_116 + add_cast_117;
    sub_cast_119 := resize(add_temp_42, 58);
    sub_cast_120 := resize(mz_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
      & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
      '0' & '0' & '0', 58);
    sub_temp_54 := sub_cast_119 - sub_cast_120;
    mul_temp_95 := sub_temp_51 * sub_temp_54;
    add_cast_118 := resize(mul_temp_95, 112);
    add_temp_43 := add_cast_113 + add_cast_118;
    s2_tmp <= add_temp_43(89 DOWNTO 66);
    cast_94 := signed(resize(v2q1, 25));
    sub_cast_121 := resize(q1q3 & '0', 26);
    sub_cast_122 := signed(resize(sub_cast_121, 28));
    sub_cast_123 := signed(resize(v2q0q2 & '0', 28));
    sub_temp_55 := sub_cast_122 - sub_cast_123;
    sub_cast_124 := resize(sub_temp_55, 37);
    sub_cast_125 := resize(ax_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 37);
    sub_temp_56 := sub_cast_124 - sub_cast_125;
    mul_temp_96 := cast_94 * sub_temp_56;
    add_cast_119 := mul_temp_96(60 DOWNTO 0);
    add_cast_120 := resize(add_cast_119, 62);
    cast_95 := signed(resize(v2q2, 25));
    add_cast_121 := resize(q0q1 & '0', 26);
    add_cast_122 := resize(add_cast_121, 27);
    add_cast_123 := resize(v2q2q3 & '0', 27);
    add_temp_44 := add_cast_122 + add_cast_123;
    sub_cast_126 := signed(resize(add_temp_44, 37));
    sub_cast_127 := resize(ay_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 37);
    sub_temp_57 := sub_cast_126 - sub_cast_127;
    mul_temp_97 := cast_95 * sub_temp_57;
    add_cast_124 := mul_temp_97(60 DOWNTO 0);
    add_cast_125 := resize(add_cast_124, 62);
    add_temp_45 := add_cast_120 + add_cast_125;
    add_cast_126 := resize(add_temp_45 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
      '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
      '0' & '0' & '0', 110);
    cast_96 := signed(resize(v4bx, 25));
    cast_97 := resize(cast_96, 26);
    cast_98 :=  - (cast_97);
    cast_99 := cast_98(24 DOWNTO 0);
    mul_temp_98 := cast_99 * q3_1;
    add_cast_127 := resize(mul_temp_98 & '0', 51);
    mul_temp_99 := v2bz * q1_1;
    add_cast_128 := resize(mul_temp_99, 51);
    add_temp_46 := add_cast_127 + add_cast_128;
    cast_100 := signed(resize(v2bx, 25));
    sub_cast_128 := signed(resize(q2q2, 26));
    sub_temp_58 := 8388608 - sub_cast_128;
    sub_cast_129 := resize(sub_temp_58, 27);
    sub_cast_130 := signed(resize(q3q3, 27));
    sub_temp_59 := sub_cast_129 - sub_cast_130;
    mul_temp_100 := cast_100 * sub_temp_59;
    add_cast_129 := mul_temp_100(50 DOWNTO 0);
    add_cast_130 := resize(add_cast_129, 52);
    sub_cast_131 := signed(resize(q1q3, 26));
    sub_cast_132 := signed(resize(q0q2, 26));
    sub_temp_60 := sub_cast_131 - sub_cast_132;
    mul_temp_101 := v2bz * sub_temp_60;
    add_cast_131 := resize(mul_temp_101, 52);
    add_temp_47 := add_cast_130 + add_cast_131;
    sub_cast_133 := resize(add_temp_47, 58);
    sub_cast_134 := resize(mx_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
      & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
      '0' & '0' & '0', 58);
    sub_temp_61 := sub_cast_133 - sub_cast_134;
    mul_temp_102 := add_temp_46 * sub_temp_61;
    add_cast_132 := resize(mul_temp_102, 110);
    add_temp_48 := add_cast_126 + add_cast_132;
    add_cast_133 := resize(add_temp_48, 111);
    cast_101 := signed(resize(v2bx, 25));
    cast_102 := resize(cast_101, 26);
    cast_103 :=  - (cast_102);
    cast_104 := cast_103(24 DOWNTO 0);
    mul_temp_103 := cast_104 * q0_1;
    add_cast_134 := resize(mul_temp_103, 50);
    mul_temp_104 := v2bz * q2_1;
    add_cast_135 := resize(mul_temp_104, 50);
    add_temp_49 := add_cast_134 + add_cast_135;
    cast_105 := signed(resize(v2bx, 25));
    sub_cast_135 := signed(resize(q1q2, 26));
    sub_cast_136 := signed(resize(q0q3, 26));
    sub_temp_62 := sub_cast_135 - sub_cast_136;
    mul_temp_105 := cast_105 * sub_temp_62;
    add_cast_136 := mul_temp_105(49 DOWNTO 0);
    add_cast_137 := resize(add_cast_136, 51);
    add_cast_138 := resize(q0q1, 25);
    add_cast_139 := resize(q2q3, 25);
    add_temp_50 := add_cast_138 + add_cast_139;
    cast_106 := signed(resize(add_temp_50, 26));
    mul_temp_106 := v2bz * cast_106;
    add_cast_140 := mul_temp_106(48 DOWNTO 0);
    add_cast_141 := resize(add_cast_140, 51);
    add_temp_51 := add_cast_137 + add_cast_141;
    sub_cast_137 := resize(add_temp_51, 58);
    sub_cast_138 := resize(my_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
      & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
      '0' & '0' & '0', 58);
    sub_temp_63 := sub_cast_137 - sub_cast_138;
    mul_temp_107 := add_temp_49 * sub_temp_63;
    add_cast_142 := resize(mul_temp_107, 111);
    add_temp_52 := add_cast_133 + add_cast_142;
    add_cast_143 := resize(add_temp_52, 112);
    cast_107 := signed(resize(v2bx, 25));
    mul_temp_108 := cast_107 * q1_1;
    cast_108 := mul_temp_108(47 DOWNTO 0);
    add_cast_144 := resize(q0q2, 25);
    add_cast_145 := resize(q1q3, 25);
    add_temp_53 := add_cast_144 + add_cast_145;
    mul_temp_109 := v2bx * add_temp_53;
    add_cast_146 := signed(resize(mul_temp_109, 52));
    sub_cast_139 := signed(resize(q1q1, 26));
    sub_temp_64 := 8388608 - sub_cast_139;
    sub_cast_140 := resize(sub_temp_64, 27);
    sub_cast_141 := signed(resize(q2q2, 27));
    sub_temp_65 := sub_cast_140 - sub_cast_141;
    mul_temp_110 := v2bz * sub_temp_65;
    add_cast_147 := resize(mul_temp_110, 52);
    add_temp_54 := add_cast_146 + add_cast_147;
    sub_cast_142 := resize(add_temp_54, 58);
    sub_cast_143 := resize(mz_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
      & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
      '0' & '0' & '0', 58);
    sub_temp_66 := sub_cast_142 - sub_cast_143;
    mul_temp_111 := cast_108 * sub_temp_66;
    add_cast_148 := resize(mul_temp_111, 112);
    add_temp_55 := add_cast_143 + add_cast_148;
    s3_tmp <= add_temp_55(89 DOWNTO 66);
  END PROCESS Madgwick_correction_fixpt_1_output;


  s0 <= std_logic_vector(s0_tmp);

  s1 <= std_logic_vector(s1_tmp);

  s2 <= std_logic_vector(s2_tmp);

  s3 <= std_logic_vector(s3_tmp);

  ceout <= clkenable;

END rtl;

