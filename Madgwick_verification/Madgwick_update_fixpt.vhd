-- -------------------------------------------------------------
-- 

-- File Name: C:\Users\z68j959\Documents\GitHub\EELE466\hdl_coder_Madgwick_update\codegen\Madgwick_update\hdlsrc\Madgwick_update_fixpt.vhd
-- Created: 2015-04-28 13:19:17
-- 
-- Generated by MATLAB 8.3, MATLAB Coder 2.6 and HDL Coder 3.4
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ceout         1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- q0                            ceout         1
-- q1                            ceout         1
-- q2                            ceout         1
-- q3                            ceout         1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Madgwick_update_fixpt
-- Source Path: Madgwick_update_fixpt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Madgwick_update_fixpt IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clkenable                         :   IN    std_logic;
        q01                               :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        q11                               :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        q21                               :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        q31                               :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        qdot11                            :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        qdot21                            :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        qdot31                            :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        qdot41                            :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        s0                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        s1                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        s2                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        s3                                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        beta                              :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        sampletime                        :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        ceout                             :   OUT   std_logic;
        q0                                :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        q1                                :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        q2                                :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
        q3                                :   OUT   std_logic_vector(23 DOWNTO 0)  -- sfix24_En12
        );
END Madgwick_update_fixpt;


ARCHITECTURE rtl OF Madgwick_update_fixpt IS

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL q01_signed                       : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q0_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q11_signed                       : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q1_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q21_signed                       : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q2_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q31_signed                       : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q3_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL qdot11_signed                    : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL qDot1_1                          : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL qdot21_signed                    : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL qDot2_1                          : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL qdot31_signed                    : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL qDot3_1                          : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL qdot41_signed                    : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL qDot4_1                          : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL s0_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL s0_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL s1_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL s1_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL s2_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL s2_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL s3_signed                        : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL s3_1                             : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL beta_signed                      : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL beta_1                           : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL sampletime_signed                : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL sampleTime_1                     : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q0_tmp                           : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q1_tmp                           : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q2_tmp                           : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL q3_tmp                           : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL Madgwick_update_fixpt_add_cast   : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_sub_cast   : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_mul_temp   : signed(47 DOWNTO 0);  -- sfix48_En24
  SIGNAL Madgwick_update_fixpt_sub_cast_1 : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_sub_temp   : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_cast       : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL Madgwick_update_fixpt_mul_temp_1 : signed(47 DOWNTO 0);  -- sfix48_En24
  SIGNAL Madgwick_update_fixpt_add_cast_1 : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_add_temp   : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_add_cast_2 : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_sub_cast_2 : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_mul_temp_2 : signed(47 DOWNTO 0);  -- sfix48_En24
  SIGNAL Madgwick_update_fixpt_sub_cast_3 : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_sub_temp_1 : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_cast_1     : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL Madgwick_update_fixpt_mul_temp_3 : signed(47 DOWNTO 0);  -- sfix48_En24
  SIGNAL Madgwick_update_fixpt_add_cast_3 : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_add_temp_1 : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_add_cast_4 : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_sub_cast_4 : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_mul_temp_4 : signed(47 DOWNTO 0);  -- sfix48_En24
  SIGNAL Madgwick_update_fixpt_sub_cast_5 : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_sub_temp_2 : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_cast_2     : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL Madgwick_update_fixpt_mul_temp_5 : signed(47 DOWNTO 0);  -- sfix48_En24
  SIGNAL Madgwick_update_fixpt_add_cast_5 : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_add_temp_2 : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_add_cast_6 : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_sub_cast_6 : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_mul_temp_6 : signed(47 DOWNTO 0);  -- sfix48_En24
  SIGNAL Madgwick_update_fixpt_sub_cast_7 : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_sub_temp_3 : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_cast_3     : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL Madgwick_update_fixpt_mul_temp_7 : signed(47 DOWNTO 0);  -- sfix48_En24
  SIGNAL Madgwick_update_fixpt_add_cast_7 : signed(48 DOWNTO 0);  -- sfix49_En24
  SIGNAL Madgwick_update_fixpt_add_temp_3 : signed(48 DOWNTO 0);  -- sfix49_En24

BEGIN
  q01_signed <= signed(q01);

  enb <= clkenable;

  in_0_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      q0_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        q0_1 <= q01_signed;
      END IF;
    END IF;
  END PROCESS in_0_pipe_process;


  q11_signed <= signed(q11);

  in_1_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      q1_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        q1_1 <= q11_signed;
      END IF;
    END IF;
  END PROCESS in_1_pipe_process;


  q21_signed <= signed(q21);

  in_2_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      q2_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        q2_1 <= q21_signed;
      END IF;
    END IF;
  END PROCESS in_2_pipe_process;


  q31_signed <= signed(q31);

  in_3_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      q3_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        q3_1 <= q31_signed;
      END IF;
    END IF;
  END PROCESS in_3_pipe_process;


  qdot11_signed <= signed(qdot11);

  in_4_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      qDot1_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        qDot1_1 <= qdot11_signed;
      END IF;
    END IF;
  END PROCESS in_4_pipe_process;


  qdot21_signed <= signed(qdot21);

  in_5_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      qDot2_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        qDot2_1 <= qdot21_signed;
      END IF;
    END IF;
  END PROCESS in_5_pipe_process;


  qdot31_signed <= signed(qdot31);

  in_6_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      qDot3_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        qDot3_1 <= qdot31_signed;
      END IF;
    END IF;
  END PROCESS in_6_pipe_process;


  qdot41_signed <= signed(qdot41);

  in_7_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      qDot4_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        qDot4_1 <= qdot41_signed;
      END IF;
    END IF;
  END PROCESS in_7_pipe_process;


  s0_signed <= signed(s0);

  in_8_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      s0_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        s0_1 <= s0_signed;
      END IF;
    END IF;
  END PROCESS in_8_pipe_process;


  s1_signed <= signed(s1);

  in_9_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      s1_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        s1_1 <= s1_signed;
      END IF;
    END IF;
  END PROCESS in_9_pipe_process;


  s2_signed <= signed(s2);

  in_10_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      s2_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        s2_1 <= s2_signed;
      END IF;
    END IF;
  END PROCESS in_10_pipe_process;


  s3_signed <= signed(s3);

  in_11_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      s3_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        s3_1 <= s3_signed;
      END IF;
    END IF;
  END PROCESS in_11_pipe_process;


  beta_signed <= signed(beta);

  in_12_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      beta_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        beta_1 <= beta_signed;
      END IF;
    END IF;
  END PROCESS in_12_pipe_process;


  sampletime_signed <= signed(sampletime);

  in_13_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sampleTime_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sampleTime_1 <= sampletime_signed;
      END IF;
    END IF;
  END PROCESS in_13_pipe_process;


  --HDL code generation from MATLAB function: Madgwick_update_fixpt
  --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  --                                                                          %
  --       Generated by MATLAB 8.3, MATLAB Coder 2.6 and HDL Coder 3.4        %
  --                                                                          %
  --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  
--'Madgwick_update_fixpt:9' fm = fimath('RoundingMethod', 'Floor', 'OverflowAction', 'Wrap', 'ProductMode', 'FullPrecision', 'MaxProductWordLength', 128, 'SumMode', 'FullPrecision', 'MaxSumWordLength', 128);
  --'Madgwick_update_fixpt:11' q0 = fi(q0_1, 1, 24, 12, fm);
  --'Madgwick_update_fixpt:12' q1 = fi(q1_1, 1, 24, 12, fm);
  --'Madgwick_update_fixpt:13' q2 = fi(q2_1, 1, 24, 12, fm);
  --'Madgwick_update_fixpt:14' q3 = fi(q3_1, 1, 24, 12, fm);
  --'Madgwick_update_fixpt:15' qDot1 = fi(qDot1_1, 1, 24, 12, fm);
  --'Madgwick_update_fixpt:16' qDot2 = fi(qDot2_1, 1, 24, 12, fm);
  --'Madgwick_update_fixpt:17' qDot3 = fi(qDot3_1, 1, 24, 12, fm);
  --'Madgwick_update_fixpt:18' qDot4 = fi(qDot4_1, 1, 24, 12, fm);
  -- Apply feedback step
  --'Madgwick_update_fixpt:21' qDot1 = fi(qDot1 - beta*s0, 1, 24, 12, fm);
  --'Madgwick_update_fixpt:22' qDot2 = fi(qDot2 - beta*s1, 1, 24, 12, fm);
  --'Madgwick_update_fixpt:23' qDot3 = fi(qDot3 - beta*s2, 1, 24, 12, fm);
  --'Madgwick_update_fixpt:24' qDot4 = fi(qDot4 - beta*s3, 1, 24, 12, fm);
  -- Integrate rate of change of quaternion to yield quaternion
  --'Madgwick_update_fixpt:26' q0 = fi(q0 + qDot1*sampleTime, 1, 24, 12, fm);
  --'Madgwick_update_fixpt:27' q1 = fi(q1 + qDot2*sampleTime, 1, 24, 12, fm);
  --'Madgwick_update_fixpt:28' q2 = fi(q2 + qDot3*sampleTime, 1, 24, 12, fm);
  --'Madgwick_update_fixpt:29' q3 = fi(q3 + qDot4*sampleTime, 1, 24, 12, fm);
  Madgwick_update_fixpt_add_cast <= resize(q0_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0' & '0', 49);
  Madgwick_update_fixpt_sub_cast <= resize(qDot1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0' & '0' & '0', 49);
  Madgwick_update_fixpt_mul_temp <= beta_1 * s0_1;
  Madgwick_update_fixpt_sub_cast_1 <= resize(Madgwick_update_fixpt_mul_temp, 49);
  Madgwick_update_fixpt_sub_temp <= Madgwick_update_fixpt_sub_cast - Madgwick_update_fixpt_sub_cast_1;
  Madgwick_update_fixpt_cast <= Madgwick_update_fixpt_sub_temp(35 DOWNTO 12);
  Madgwick_update_fixpt_mul_temp_1 <= Madgwick_update_fixpt_cast * sampleTime_1;
  Madgwick_update_fixpt_add_cast_1 <= resize(Madgwick_update_fixpt_mul_temp_1, 49);
  Madgwick_update_fixpt_add_temp <= Madgwick_update_fixpt_add_cast + Madgwick_update_fixpt_add_cast_1;
  q0_tmp <= Madgwick_update_fixpt_add_temp(35 DOWNTO 12);
  Madgwick_update_fixpt_add_cast_2 <= resize(q1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
    & '0' & '0', 49);
  Madgwick_update_fixpt_sub_cast_2 <= resize(qDot2_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0' & '0' & '0', 49);
  Madgwick_update_fixpt_mul_temp_2 <= beta_1 * s1_1;
  Madgwick_update_fixpt_sub_cast_3 <= resize(Madgwick_update_fixpt_mul_temp_2, 49);
  Madgwick_update_fixpt_sub_temp_1 <= Madgwick_update_fixpt_sub_cast_2 - Madgwick_update_fixpt_sub_cast_3;
  Madgwick_update_fixpt_cast_1 <= Madgwick_update_fixpt_sub_temp_1(35 DOWNTO 12);
  Madgwick_update_fixpt_mul_temp_3 <= Madgwick_update_fixpt_cast_1 * sampleTime_1;
  Madgwick_update_fixpt_add_cast_3 <= resize(Madgwick_update_fixpt_mul_temp_3, 49);
  Madgwick_update_fixpt_add_temp_1 <= Madgwick_update_fixpt_add_cast_2 + Madgwick_update_fixpt_add_cast_3;
  q1_tmp <= Madgwick_update_fixpt_add_temp_1(35 DOWNTO 12);
  Madgwick_update_fixpt_add_cast_4 <= resize(q2_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
    & '0' & '0', 49);
  Madgwick_update_fixpt_sub_cast_4 <= resize(qDot3_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0' & '0' & '0', 49);
  Madgwick_update_fixpt_mul_temp_4 <= beta_1 * s2_1;
  Madgwick_update_fixpt_sub_cast_5 <= resize(Madgwick_update_fixpt_mul_temp_4, 49);
  Madgwick_update_fixpt_sub_temp_2 <= Madgwick_update_fixpt_sub_cast_4 - Madgwick_update_fixpt_sub_cast_5;
  Madgwick_update_fixpt_cast_2 <= Madgwick_update_fixpt_sub_temp_2(35 DOWNTO 12);
  Madgwick_update_fixpt_mul_temp_5 <= Madgwick_update_fixpt_cast_2 * sampleTime_1;
  Madgwick_update_fixpt_add_cast_5 <= resize(Madgwick_update_fixpt_mul_temp_5, 49);
  Madgwick_update_fixpt_add_temp_2 <= Madgwick_update_fixpt_add_cast_4 + Madgwick_update_fixpt_add_cast_5;
  q2_tmp <= Madgwick_update_fixpt_add_temp_2(35 DOWNTO 12);
  Madgwick_update_fixpt_add_cast_6 <= resize(q3_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
    & '0' & '0', 49);
  Madgwick_update_fixpt_sub_cast_6 <= resize(qDot4_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0' & '0' & '0', 49);
  Madgwick_update_fixpt_mul_temp_6 <= beta_1 * s3_1;
  Madgwick_update_fixpt_sub_cast_7 <= resize(Madgwick_update_fixpt_mul_temp_6, 49);
  Madgwick_update_fixpt_sub_temp_3 <= Madgwick_update_fixpt_sub_cast_6 - Madgwick_update_fixpt_sub_cast_7;
  Madgwick_update_fixpt_cast_3 <= Madgwick_update_fixpt_sub_temp_3(35 DOWNTO 12);
  Madgwick_update_fixpt_mul_temp_7 <= Madgwick_update_fixpt_cast_3 * sampleTime_1;
  Madgwick_update_fixpt_add_cast_7 <= resize(Madgwick_update_fixpt_mul_temp_7, 49);
  Madgwick_update_fixpt_add_temp_3 <= Madgwick_update_fixpt_add_cast_6 + Madgwick_update_fixpt_add_cast_7;
  q3_tmp <= Madgwick_update_fixpt_add_temp_3(35 DOWNTO 12);

  q0 <= std_logic_vector(q0_tmp);

  q1 <= std_logic_vector(q1_tmp);

  q2 <= std_logic_vector(q2_tmp);

  q3 <= std_logic_vector(q3_tmp);

  ceout <= clkenable;

END rtl;

